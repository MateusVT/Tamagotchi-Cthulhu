{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/7zip/index.js","webpack:///./node_modules/balanced-match/index.js","webpack:///./node_modules/brace-expansion/index.js","webpack:///./node_modules/concat-map/index.js","webpack:///./node_modules/cross-unzip/index.js","webpack:///./node_modules/electron-devtools-installer/dist/downloadChromeExtension.js","webpack:///./node_modules/electron-devtools-installer/dist/index.js","webpack:///./node_modules/electron-devtools-installer/dist/utils.js","webpack:///./node_modules/fs.realpath/index.js","webpack:///./node_modules/fs.realpath/old.js","webpack:///./node_modules/glob/common.js","webpack:///./node_modules/glob/glob.js","webpack:///./node_modules/glob/sync.js","webpack:///./node_modules/inflight/inflight.js","webpack:///./node_modules/inherits/inherits.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/minimatch/minimatch.js","webpack:///./node_modules/once/once.js","webpack:///./node_modules/path-is-absolute/index.js","webpack:///./node_modules/rimraf/rimraf.js","webpack:///./node_modules/semver/semver.js","webpack:///./node_modules/wrappy/wrappy.js","webpack:///./src/main/main.ts","webpack:///external \"assert\"","webpack:///external \"child_process\"","webpack:///external \"electron\"","webpack:///external \"events\"","webpack:///external \"fs\"","webpack:///external \"https\"","webpack:///external \"path\"","webpack:///external \"url\"","webpack:///external \"util\""],"names":["win","installExtensions","installer","require","forceDownload","process","env","UPGRADE_EXTENSIONS","extensions","Promise","all","map","name","default","catch","console","log","createWindow","BrowserWindow","width","height","resizable","title","ELECTRON_DISABLE_SECURITY_WARNINGS","loadURL","webContents","once","on","app","platform","quit"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,cAAc,mBAAO,CAAC,kBAAM;AAC5B,UAAU,mBAAO,CAAC,mDAAW;;AAE7B;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;;;;;;;;;;;;;;;;;;;;;;;ACZa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC1DA,gBAAgB,mBAAO,CAAC,sDAAY;AACpC,eAAe,mBAAO,CAAC,8DAAgB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC,oCAAoC;AACpC;AACA;AACA;;;AAGA;AACA;AACA,wCAAwC,GAAG,IAAI;AAC/C;AACA;AACA;;AAEA;AACA,qBAAqB,KAAK;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B,uCAAuC,GAAG;AAC1C,YAAY,GAAG,yBAAyB;AACxC;AACA;AACA,8BAA8B;AAC9B,cAAc,GAAG;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,KAAK;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,EAAE;AACV,2BAA2B;AAC3B,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY,KAAK,QAAQ,EAAE,IAAI,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mCAAmC,2BAA2B;AAC9D;;AAEA,iBAAiB,cAAc;AAC/B,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACvMA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACZY;AACZ,YAAY,mBAAO,CAAC,oCAAe;AACnC;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,mBAAO,CAAC,0CAAM;;AAE1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDa;;AAEb;AACA;AACA,CAAC;;AAED,UAAU,mBAAO,CAAC,cAAI;;AAEtB;;AAEA,YAAY,mBAAO,CAAC,kBAAM;;AAE1B;;AAEA,cAAc,mBAAO,CAAC,+CAAQ;;AAE9B;;AAEA,kBAAkB,mBAAO,CAAC,wDAAa;;AAEvC;;AAEA,aAAa,mBAAO,CAAC,yEAAS;;AAE9B,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yIAAyI;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,2FAA2F;AAC3F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA,0C;;;;;;;;;;;;AChEa;;AAEb;AACA;AACA,CAAC;AACD;;AAEA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q,gBAAgB,mBAAO,CAAC,0BAAU;;AAElC;;AAEA,UAAU,mBAAO,CAAC,cAAI;;AAEtB;;AAEA,YAAY,mBAAO,CAAC,kBAAM;;AAE1B;;AAEA,cAAc,mBAAO,CAAC,+CAAQ;;AAE9B;;AAEA,+BAA+B,mBAAO,CAAC,6GAA2B;;AAElE;;AAEA,aAAa,mBAAO,CAAC,yEAAS;;AAE9B,sCAAsC,uCAAuC,gBAAgB;;AAE7F,2CAA2C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAE/M;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,gGAAgG;AAChG;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;ACjIa;;AAEb;AACA;AACA,CAAC;AACD;;AAEA,gBAAgB,mBAAO,CAAC,0BAAU;;AAElC;;AAEA,UAAU,mBAAO,CAAC,cAAI;;AAEtB;;AAEA,YAAY,mBAAO,CAAC,kBAAM;;AAE1B;;AAEA,aAAa,mBAAO,CAAC,oBAAO;;AAE5B;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,E;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,mBAAO,CAAC,cAAI;AACrB;AACA;;AAEA;AACA;AACA,UAAU,mBAAO,CAAC,mDAAU;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,kBAAM;AAC/B;AACA,SAAS,mBAAO,CAAC,cAAI;;AAErB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA,0CAA0C,EAAE;AAC5C,CAAC;AACD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,kBAAM;AACzB,gBAAgB,mBAAO,CAAC,wDAAW;AACnC,iBAAiB,mBAAO,CAAC,kEAAkB;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;;AAEA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;AC/OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,mBAAO,CAAC,cAAI;AACrB,SAAS,mBAAO,CAAC,wDAAa;AAC9B,gBAAgB,mBAAO,CAAC,wDAAW;AACnC;AACA,eAAe,mBAAO,CAAC,qDAAU;AACjC,SAAS,mBAAO,CAAC,sBAAQ;AACzB,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,iBAAiB,mBAAO,CAAC,kEAAkB;AAC3C,eAAe,mBAAO,CAAC,8CAAW;AAClC,aAAa,mBAAO,CAAC,kDAAa;AAClC;AACA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,qDAAU;AACjC,WAAW,mBAAO,CAAC,kBAAM;AACzB;AACA;;AAEA,WAAW,mBAAO,CAAC,yCAAM;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;ACrxBA;AACA;;AAEA,SAAS,mBAAO,CAAC,cAAI;AACrB,SAAS,mBAAO,CAAC,wDAAa;AAC9B,gBAAgB,mBAAO,CAAC,wDAAW;AACnC;AACA,WAAW,mBAAO,CAAC,8CAAW;AAC9B,WAAW,mBAAO,CAAC,kBAAM;AACzB,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,iBAAiB,mBAAO,CAAC,kEAAkB;AAC3C,aAAa,mBAAO,CAAC,kDAAa;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACreA,aAAa,mBAAO,CAAC,+CAAQ;AAC7B;AACA,WAAW,mBAAO,CAAC,yCAAM;;AAEzB;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;;;;;;;;;;;;ACrDA;AACA,aAAa,mBAAO,CAAC,kBAAM;AAC3B;AACA;AACA,CAAC;AACD,mBAAmB,mBAAO,CAAC,0EAAuB;AAClD;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AACA;;AAEA,YAAY;AACZ;AACA,SAAS,mBAAO,CAAC,kBAAM;AACvB,CAAC;;AAED;AACA,aAAa,mBAAO,CAAC,gEAAiB;;AAEtC;AACA,QAAQ,uCAAuC;AAC/C,QAAQ,2BAA2B;AACnC,QAAQ,2BAA2B;AACnC,QAAQ,2BAA2B;AACnC,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,IAAI;;AAE7C;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK,IAAI;AACT,KAAK,GAAG;AACR,KAAK,KAAK;AACV,KAAK,IAAI,IAAI,EAAE;AACf,KAAK,IAAI,EAAE,IAAI;AACf;AACA;AACA,KAAK,IAAI,OAAO,IAAI;AACpB,KAAK,EAAE,OAAO,EAAE;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,IAAI;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA;AACA;AACA,gCAAgC,EAAE,EAAE,KAAK;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,6CAA6C;;AAElD;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;;;;;;;;;;;AC15BA,aAAa,mBAAO,CAAC,+CAAQ;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzCa;;AAEb;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACnBA;AACA;;AAEA,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,WAAW,mBAAO,CAAC,kBAAM;AACzB,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,yCAAM;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,oBAAoB;AACrC;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;AC3WA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,oCAAoC;AACxD,0BAA0B,oCAAoC;AAC9D,0BAA0B,oCAAoC;AAC9D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC18CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA,IAAIA,GAAJ;;AAEA,MAAMC,iBAAiB,GAAG,YAAY;AAClC,QAAMC,SAAS,GAAGC,mBAAO,CAAC,6FAAD,CAAzB;;AACA,QAAMC,aAAa,GAAG,CAAC,CAACC,OAAO,CAACC,GAAR,CAAYC,kBAApC;AACA,QAAMC,UAAU,GAAG,CAAC,uBAAD,EAA0B,gBAA1B,CAAnB;AAEA,SAAOC,OAAO,CAACC,GAAR,CACHF,UAAU,CAACG,GAAX,CAAeC,IAAI,IAAIV,SAAS,CAACW,OAAV,CAAkBX,SAAS,CAACU,IAAD,CAA3B,EAAmCR,aAAnC,CAAvB,CADG,EAELU,KAFK,CAECC,OAAO,CAACC,GAFT,CAAP;AAGH,CARD;;AAUA,MAAMC,YAAY,GAAG,YAAY;AAC7B,MAAIZ,IAAJ,EAA2C;AACvC,UAAMJ,iBAAiB,EAAvB;AACH;;AAEDD,KAAG,GAAG,IAAIkB,sDAAJ,CAAkB;AAAEC,SAAK,EAAE,GAAT;AAAcC,UAAM,EAAE,GAAtB;AAA2BC,aAAS,EAAE,IAAtC;AAA4CC,SAAK,EAAC;AAAlD,GAAlB,CAAN;;AAEA,MAAIjB,IAAJ,EAA2C;AACvCA,WAAO,CAACC,GAAR,CAAYiB,kCAAZ,GAAiD,GAAjD;AACAvB,OAAG,CAACwB,OAAJ,CAAa,uBAAb;AACH,GAHD,MAGO,EAQN;;AAED,MAAInB,IAAJ,EAA2C;AACvC;AACAL,OAAG,CAACyB,WAAJ,CAAgBC,IAAhB,CAAqB,WAArB,EAAkC,MAAM,CACpC;AACH,KAFD;AAGH;;AAED1B,KAAG,CAAC2B,EAAJ,CAAO,QAAP,EAAiB,MAAM;AACnB3B,OAAG,GAAG,IAAN;AACH,GAFD;AAGH,CA9BD;;AAgCA4B,4CAAG,CAACD,EAAJ,CAAO,OAAP,EAAgBV,YAAhB;AAEAW,4CAAG,CAACD,EAAJ,CAAO,mBAAP,EAA4B,MAAM;AAC9B,MAAItB,OAAO,CAACwB,QAAR,KAAqB,QAAzB,EAAmC;AAC/BD,gDAAG,CAACE,IAAJ;AACH;AACJ,CAJD;AAMAF,4CAAG,CAACD,EAAJ,CAAO,UAAP,EAAmB,MAAM;AACrB,MAAI3B,GAAG,KAAK,IAAZ,EAAkB;AACdiB,gBAAY;AACf;AACJ,CAJD,E;;;;;;;;;;;ACxDA,mC;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,iC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main/main.ts\");\n","var resolve = require('path').resolve\r\nvar bin = require('./package').bin\r\n\r\nmodule.exports = map_obj(bin, function(v){\r\n  return resolve(__dirname, v)\r\n})\r\n\r\nfunction map_obj(obj, fn){\r\n  return Object.keys(obj).reduce(function(m, k){\r\n    m[k] = fn(obj[k])\r\n    return m\r\n  }, {})\r\n}\r\n","'use strict';\r\nmodule.exports = balanced;\r\nfunction balanced(a, b, str) {\r\n  if (a instanceof RegExp) a = maybeMatch(a, str);\r\n  if (b instanceof RegExp) b = maybeMatch(b, str);\r\n\r\n  var r = range(a, b, str);\r\n\r\n  return r && {\r\n    start: r[0],\r\n    end: r[1],\r\n    pre: str.slice(0, r[0]),\r\n    body: str.slice(r[0] + a.length, r[1]),\r\n    post: str.slice(r[1] + b.length)\r\n  };\r\n}\r\n\r\nfunction maybeMatch(reg, str) {\r\n  var m = str.match(reg);\r\n  return m ? m[0] : null;\r\n}\r\n\r\nbalanced.range = range;\r\nfunction range(a, b, str) {\r\n  var begs, beg, left, right, result;\r\n  var ai = str.indexOf(a);\r\n  var bi = str.indexOf(b, ai + 1);\r\n  var i = ai;\r\n\r\n  if (ai >= 0 && bi > 0) {\r\n    begs = [];\r\n    left = str.length;\r\n\r\n    while (i >= 0 && !result) {\r\n      if (i == ai) {\r\n        begs.push(i);\r\n        ai = str.indexOf(a, i + 1);\r\n      } else if (begs.length == 1) {\r\n        result = [ begs.pop(), bi ];\r\n      } else {\r\n        beg = begs.pop();\r\n        if (beg < left) {\r\n          left = beg;\r\n          right = bi;\r\n        }\r\n\r\n        bi = str.indexOf(b, i + 1);\r\n      }\r\n\r\n      i = ai < bi && ai >= 0 ? ai : bi;\r\n    }\r\n\r\n    if (begs.length) {\r\n      result = [ left, right ];\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n","var concatMap = require('concat-map');\r\nvar balanced = require('balanced-match');\r\n\r\nmodule.exports = expandTop;\r\n\r\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\r\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\r\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\r\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\r\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\r\n\r\nfunction numeric(str) {\r\n  return parseInt(str, 10) == str\r\n    ? parseInt(str, 10)\r\n    : str.charCodeAt(0);\r\n}\r\n\r\nfunction escapeBraces(str) {\r\n  return str.split('\\\\\\\\').join(escSlash)\r\n            .split('\\\\{').join(escOpen)\r\n            .split('\\\\}').join(escClose)\r\n            .split('\\\\,').join(escComma)\r\n            .split('\\\\.').join(escPeriod);\r\n}\r\n\r\nfunction unescapeBraces(str) {\r\n  return str.split(escSlash).join('\\\\')\r\n            .split(escOpen).join('{')\r\n            .split(escClose).join('}')\r\n            .split(escComma).join(',')\r\n            .split(escPeriod).join('.');\r\n}\r\n\r\n\r\n// Basically just str.split(\",\"), but handling cases\r\n// where we have nested braced sections, which should be\r\n// treated as individual members, like {a,{b,c},d}\r\nfunction parseCommaParts(str) {\r\n  if (!str)\r\n    return [''];\r\n\r\n  var parts = [];\r\n  var m = balanced('{', '}', str);\r\n\r\n  if (!m)\r\n    return str.split(',');\r\n\r\n  var pre = m.pre;\r\n  var body = m.body;\r\n  var post = m.post;\r\n  var p = pre.split(',');\r\n\r\n  p[p.length-1] += '{' + body + '}';\r\n  var postParts = parseCommaParts(post);\r\n  if (post.length) {\r\n    p[p.length-1] += postParts.shift();\r\n    p.push.apply(p, postParts);\r\n  }\r\n\r\n  parts.push.apply(parts, p);\r\n\r\n  return parts;\r\n}\r\n\r\nfunction expandTop(str) {\r\n  if (!str)\r\n    return [];\r\n\r\n  // I don't know why Bash 4.3 does this, but it does.\r\n  // Anything starting with {} will have the first two bytes preserved\r\n  // but *only* at the top level, so {},a}b will not expand to anything,\r\n  // but a{},b}c will be expanded to [a}c,abc].\r\n  // One could argue that this is a bug in Bash, but since the goal of\r\n  // this module is to match Bash's rules, we escape a leading {}\r\n  if (str.substr(0, 2) === '{}') {\r\n    str = '\\\\{\\\\}' + str.substr(2);\r\n  }\r\n\r\n  return expand(escapeBraces(str), true).map(unescapeBraces);\r\n}\r\n\r\nfunction identity(e) {\r\n  return e;\r\n}\r\n\r\nfunction embrace(str) {\r\n  return '{' + str + '}';\r\n}\r\nfunction isPadded(el) {\r\n  return /^-?0\\d/.test(el);\r\n}\r\n\r\nfunction lte(i, y) {\r\n  return i <= y;\r\n}\r\nfunction gte(i, y) {\r\n  return i >= y;\r\n}\r\n\r\nfunction expand(str, isTop) {\r\n  var expansions = [];\r\n\r\n  var m = balanced('{', '}', str);\r\n  if (!m || /\\$$/.test(m.pre)) return [str];\r\n\r\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\r\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\r\n  var isSequence = isNumericSequence || isAlphaSequence;\r\n  var isOptions = m.body.indexOf(',') >= 0;\r\n  if (!isSequence && !isOptions) {\r\n    // {a},b}\r\n    if (m.post.match(/,.*\\}/)) {\r\n      str = m.pre + '{' + m.body + escClose + m.post;\r\n      return expand(str);\r\n    }\r\n    return [str];\r\n  }\r\n\r\n  var n;\r\n  if (isSequence) {\r\n    n = m.body.split(/\\.\\./);\r\n  } else {\r\n    n = parseCommaParts(m.body);\r\n    if (n.length === 1) {\r\n      // x{{a,b}}y ==> x{a}y x{b}y\r\n      n = expand(n[0], false).map(embrace);\r\n      if (n.length === 1) {\r\n        var post = m.post.length\r\n          ? expand(m.post, false)\r\n          : [''];\r\n        return post.map(function(p) {\r\n          return m.pre + n[0] + p;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // at this point, n is the parts, and we know it's not a comma set\r\n  // with a single entry.\r\n\r\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\r\n  var pre = m.pre;\r\n  var post = m.post.length\r\n    ? expand(m.post, false)\r\n    : [''];\r\n\r\n  var N;\r\n\r\n  if (isSequence) {\r\n    var x = numeric(n[0]);\r\n    var y = numeric(n[1]);\r\n    var width = Math.max(n[0].length, n[1].length)\r\n    var incr = n.length == 3\r\n      ? Math.abs(numeric(n[2]))\r\n      : 1;\r\n    var test = lte;\r\n    var reverse = y < x;\r\n    if (reverse) {\r\n      incr *= -1;\r\n      test = gte;\r\n    }\r\n    var pad = n.some(isPadded);\r\n\r\n    N = [];\r\n\r\n    for (var i = x; test(i, y); i += incr) {\r\n      var c;\r\n      if (isAlphaSequence) {\r\n        c = String.fromCharCode(i);\r\n        if (c === '\\\\')\r\n          c = '';\r\n      } else {\r\n        c = String(i);\r\n        if (pad) {\r\n          var need = width - c.length;\r\n          if (need > 0) {\r\n            var z = new Array(need + 1).join('0');\r\n            if (i < 0)\r\n              c = '-' + z + c.slice(1);\r\n            else\r\n              c = z + c;\r\n          }\r\n        }\r\n      }\r\n      N.push(c);\r\n    }\r\n  } else {\r\n    N = concatMap(n, function(el) { return expand(el, false) });\r\n  }\r\n\r\n  for (var j = 0; j < N.length; j++) {\r\n    for (var k = 0; k < post.length; k++) {\r\n      var expansion = pre + N[j] + post[k];\r\n      if (!isTop || isSequence || expansion)\r\n        expansions.push(expansion);\r\n    }\r\n  }\r\n\r\n  return expansions;\r\n}\r\n\r\n","module.exports = function (xs, fn) {\r\n    var res = [];\r\n    for (var i = 0; i < xs.length; i++) {\r\n        var x = fn(xs[i], i);\r\n        if (isArray(x)) res.push.apply(res, x);\r\n        else res.push(x);\r\n    }\r\n    return res;\r\n};\r\n\r\nvar isArray = Array.isArray || function (xs) {\r\n    return Object.prototype.toString.call(xs) === '[object Array]';\r\n};\r\n","'use strict'\r\nvar spawn = require('child_process').spawn\r\nvar slice = Array.prototype.slice\r\n\r\nvar unzip = process.platform === 'win32' ? forWin32 : forUnix\r\nunzip.unzip = unzip\r\nmodule.exports = unzip\r\n\r\n// todo: progress feedback\r\n\r\n// https://github.com/fritx/win-7zip\r\nfunction forWin32 (inPath, outPath, callback) {\r\n  var _7z = require('7zip')['7z']\r\n\r\n  // very 奇葩\r\n  // eg. 7z x archive.zip -oc:\\Doc\r\n  run(_7z, ['x', inPath, '-y', '-o' + outPath], callback)\r\n}\r\n\r\nfunction forUnix (inPath, outPath, callback) {\r\n  run('unzip', ['-o', inPath, '-d', outPath], callback)\r\n}\r\n\r\n// https://nodejs.org/api/child_process.html#child_process_event_error\r\n// Note that the 'exit' event may or may not fire after an error has occurred.\r\n// If you are listening to both the 'exit' and 'error' events,\r\n// it is important to guard against accidentally invoking handler functions multiple times.\r\nfunction run (bin, args, callback) {\r\n  callback = onceify(callback)\r\n\r\n  var prc = spawn(bin, args, {\r\n    stdio: 'ignore'\r\n  })\r\n  prc.on('error', function (err) {\r\n    callback(err)\r\n  })\r\n  prc.on('exit', function (code) {\r\n    callback(code ? new Error('Exited with code ' + code) : null)\r\n  })\r\n}\r\n\r\n// http://stackoverflow.com/questions/30234908/javascript-v8-optimisation-and-leaking-arguments\r\n// javascript V8 optimisation and “leaking arguments”\r\n// making callback to be invoked only once\r\nfunction onceify (fn) {\r\n  var called = false\r\n  return function () {\r\n    if (called) return\r\n    called = true\r\n    fn.apply(this, slice.call(arguments)) // slice arguments\r\n  }\r\n}\r\n","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _fs = require('fs');\r\n\r\nvar _fs2 = _interopRequireDefault(_fs);\r\n\r\nvar _path = require('path');\r\n\r\nvar _path2 = _interopRequireDefault(_path);\r\n\r\nvar _rimraf = require('rimraf');\r\n\r\nvar _rimraf2 = _interopRequireDefault(_rimraf);\r\n\r\nvar _crossUnzip = require('cross-unzip');\r\n\r\nvar _crossUnzip2 = _interopRequireDefault(_crossUnzip);\r\n\r\nvar _utils = require('./utils');\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar downloadChromeExtension = function downloadChromeExtension(chromeStoreID, forceDownload) {\r\n  var attempts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\r\n\r\n  var extensionsStore = (0, _utils.getPath)();\r\n  if (!_fs2.default.existsSync(extensionsStore)) {\r\n    _fs2.default.mkdirSync(extensionsStore);\r\n  }\r\n  var extensionFolder = _path2.default.resolve(extensionsStore + '/' + chromeStoreID);\r\n  return new Promise(function (resolve, reject) {\r\n    if (!_fs2.default.existsSync(extensionFolder) || forceDownload) {\r\n      if (_fs2.default.existsSync(extensionFolder)) {\r\n        _rimraf2.default.sync(extensionFolder);\r\n      }\r\n      var fileURL = 'https://clients2.google.com/service/update2/crx?response=redirect&x=id%3D' + chromeStoreID + '%26uc&prodversion=32'; // eslint-disable-line\r\n      var filePath = _path2.default.resolve(extensionFolder + '.crx');\r\n      (0, _utils.downloadFile)(fileURL, filePath).then(function () {\r\n        (0, _crossUnzip2.default)(filePath, extensionFolder, function (err) {\r\n          if (err && !_fs2.default.existsSync(_path2.default.resolve(extensionFolder, 'manifest.json'))) {\r\n            return reject(err);\r\n          }\r\n          (0, _utils.changePermissions)(extensionFolder, 755);\r\n          resolve(extensionFolder);\r\n        });\r\n      }).catch(function (err) {\r\n        console.log('Failed to fetch extension, trying ' + (attempts - 1) + ' more times'); // eslint-disable-line\r\n        if (attempts <= 1) {\r\n          return reject(err);\r\n        }\r\n        setTimeout(function () {\r\n          downloadChromeExtension(chromeStoreID, forceDownload, attempts - 1).then(resolve).catch(reject);\r\n        }, 200);\r\n      });\r\n    } else {\r\n      resolve(extensionFolder);\r\n    }\r\n  });\r\n};\r\n\r\nexports.default = downloadChromeExtension;","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.MOBX_DEVTOOLS = exports.APOLLO_DEVELOPER_TOOLS = exports.CYCLEJS_DEVTOOL = exports.REACT_PERF = exports.REDUX_DEVTOOLS = exports.VUEJS_DEVTOOLS = exports.ANGULARJS_BATARANG = exports.JQUERY_DEBUGGER = exports.BACKBONE_DEBUGGER = exports.REACT_DEVELOPER_TOOLS = exports.EMBER_INSPECTOR = undefined;\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\nvar _electron = require('electron');\r\n\r\nvar _electron2 = _interopRequireDefault(_electron);\r\n\r\nvar _fs = require('fs');\r\n\r\nvar _fs2 = _interopRequireDefault(_fs);\r\n\r\nvar _path = require('path');\r\n\r\nvar _path2 = _interopRequireDefault(_path);\r\n\r\nvar _semver = require('semver');\r\n\r\nvar _semver2 = _interopRequireDefault(_semver);\r\n\r\nvar _downloadChromeExtension = require('./downloadChromeExtension');\r\n\r\nvar _downloadChromeExtension2 = _interopRequireDefault(_downloadChromeExtension);\r\n\r\nvar _utils = require('./utils');\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nvar _ref = _electron.remote || _electron2.default,\r\n    BrowserWindow = _ref.BrowserWindow;\r\n\r\nvar IDMap = {};\r\nvar IDMapPath = _path2.default.resolve((0, _utils.getPath)(), 'IDMap.json');\r\nif (_fs2.default.existsSync(IDMapPath)) {\r\n  try {\r\n    IDMap = JSON.parse(_fs2.default.readFileSync(IDMapPath, 'utf8'));\r\n  } catch (err) {\r\n    console.error('electron-devtools-installer: Invalid JSON present in the IDMap file');\r\n  }\r\n}\r\n\r\nvar install = function install(extensionReference) {\r\n  var forceDownload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n\r\n  if (Array.isArray(extensionReference)) {\r\n    return Promise.all(extensionReference.map(function (extension) {\r\n      return install(extension, forceDownload);\r\n    }));\r\n  }\r\n  var chromeStoreID = void 0;\r\n  if ((typeof extensionReference === 'undefined' ? 'undefined' : _typeof(extensionReference)) === 'object' && extensionReference.id) {\r\n    chromeStoreID = extensionReference.id;\r\n    var electronVersion = process.versions.electron.split('-')[0];\r\n    if (!_semver2.default.satisfies(electronVersion, extensionReference.electron)) {\r\n      return Promise.reject(new Error('Version of Electron: ' + electronVersion + ' does not match required range ' + extensionReference.electron + ' for extension ' + chromeStoreID) // eslint-disable-line\r\n      );\r\n    }\r\n  } else if (typeof extensionReference === 'string') {\r\n    chromeStoreID = extensionReference;\r\n  } else {\r\n    return Promise.reject(new Error('Invalid extensionReference passed in: \"' + extensionReference + '\"'));\r\n  }\r\n  var extensionName = IDMap[chromeStoreID];\r\n  var extensionInstalled = extensionName && BrowserWindow.getDevToolsExtensions && BrowserWindow.getDevToolsExtensions()[extensionName];\r\n  if (!forceDownload && extensionInstalled) {\r\n    return Promise.resolve(IDMap[chromeStoreID]);\r\n  }\r\n  return (0, _downloadChromeExtension2.default)(chromeStoreID, forceDownload).then(function (extensionFolder) {\r\n    // Use forceDownload, but already installed\r\n    if (extensionInstalled) {\r\n      BrowserWindow.removeDevToolsExtension(extensionName);\r\n    }\r\n    var name = BrowserWindow.addDevToolsExtension(extensionFolder); // eslint-disable-line\r\n    _fs2.default.writeFileSync(IDMapPath, JSON.stringify(Object.assign(IDMap, _defineProperty({}, chromeStoreID, name))));\r\n    return Promise.resolve(name);\r\n  });\r\n};\r\n\r\nexports.default = install;\r\nvar EMBER_INSPECTOR = exports.EMBER_INSPECTOR = {\r\n  id: 'bmdblncegkenkacieihfhpjfppoconhi',\r\n  electron: '>=1.2.1'\r\n};\r\nvar REACT_DEVELOPER_TOOLS = exports.REACT_DEVELOPER_TOOLS = {\r\n  id: 'fmkadmapgofadopljbjfkapdkoienihi',\r\n  electron: '>=1.2.1'\r\n};\r\nvar BACKBONE_DEBUGGER = exports.BACKBONE_DEBUGGER = {\r\n  id: 'bhljhndlimiafopmmhjlgfpnnchjjbhd',\r\n  electron: '>=1.2.1'\r\n};\r\nvar JQUERY_DEBUGGER = exports.JQUERY_DEBUGGER = {\r\n  id: 'dbhhnnnpaeobfddmlalhnehgclcmjimi',\r\n  electron: '>=1.2.1'\r\n};\r\nvar ANGULARJS_BATARANG = exports.ANGULARJS_BATARANG = {\r\n  id: 'ighdmehidhipcmcojjgiloacoafjmpfk',\r\n  electron: '>=1.2.1'\r\n};\r\nvar VUEJS_DEVTOOLS = exports.VUEJS_DEVTOOLS = {\r\n  id: 'nhdogjmejiglipccpnnnanhbledajbpd',\r\n  electron: '>=1.2.1'\r\n};\r\nvar REDUX_DEVTOOLS = exports.REDUX_DEVTOOLS = {\r\n  id: 'lmhkpmbekcpmknklioeibfkpmmfibljd',\r\n  electron: '>=1.2.1'\r\n};\r\nvar REACT_PERF = exports.REACT_PERF = {\r\n  id: 'hacmcodfllhbnekmghgdlplbdnahmhmm',\r\n  electron: '>=1.2.6'\r\n};\r\nvar CYCLEJS_DEVTOOL = exports.CYCLEJS_DEVTOOL = {\r\n  id: 'dfgplfmhhmdekalbpejekgfegkonjpfp',\r\n  electron: '>=1.2.1'\r\n};\r\nvar APOLLO_DEVELOPER_TOOLS = exports.APOLLO_DEVELOPER_TOOLS = {\r\n  id: 'jdkknkkbebbapilgoeccciglkfbmbnfm',\r\n  electron: '>=1.2.1'\r\n};\r\nvar MOBX_DEVTOOLS = exports.MOBX_DEVTOOLS = {\r\n  id: 'pfgnfdagidkfgccljigdamigbcnndkod',\r\n  electron: '>=1.2.1'\r\n};","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.changePermissions = exports.downloadFile = exports.getPath = undefined;\r\n\r\nvar _electron = require('electron');\r\n\r\nvar _electron2 = _interopRequireDefault(_electron);\r\n\r\nvar _fs = require('fs');\r\n\r\nvar _fs2 = _interopRequireDefault(_fs);\r\n\r\nvar _path = require('path');\r\n\r\nvar _path2 = _interopRequireDefault(_path);\r\n\r\nvar _https = require('https');\r\n\r\nvar _https2 = _interopRequireDefault(_https);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar getPath = exports.getPath = function getPath() {\r\n  var savePath = (_electron.remote || _electron2.default).app.getPath('userData');\r\n  return _path2.default.resolve(savePath + '/extensions');\r\n};\r\n\r\n// Use https.get fallback for Electron < 1.4.5\r\n\r\nvar _ref = _electron.remote || _electron2.default,\r\n    net = _ref.net;\r\n\r\nvar request = net ? net.request : _https2.default.get;\r\n\r\nvar downloadFile = exports.downloadFile = function downloadFile(from, to) {\r\n  return new Promise(function (resolve, reject) {\r\n    var req = request(from);\r\n    req.on('response', function (res) {\r\n      // Shouldn't handle redirect with `electron.net`, this is for https.get fallback\r\n      if (res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\r\n        return downloadFile(res.headers.location, to).then(resolve).catch(reject);\r\n      }\r\n      res.pipe(_fs2.default.createWriteStream(to)).on('close', resolve);\r\n    });\r\n    req.on('error', reject);\r\n    req.end();\r\n  });\r\n};\r\n\r\nvar changePermissions = exports.changePermissions = function changePermissions(dir, mode) {\r\n  var files = _fs2.default.readdirSync(dir);\r\n  files.forEach(function (file) {\r\n    var filePath = _path2.default.join(dir, file);\r\n    _fs2.default.chmodSync(filePath, parseInt(mode, 8));\r\n    if (_fs2.default.statSync(filePath).isDirectory()) {\r\n      changePermissions(filePath, mode);\r\n    }\r\n  });\r\n};","module.exports = realpath\r\nrealpath.realpath = realpath\r\nrealpath.sync = realpathSync\r\nrealpath.realpathSync = realpathSync\r\nrealpath.monkeypatch = monkeypatch\r\nrealpath.unmonkeypatch = unmonkeypatch\r\n\r\nvar fs = require('fs')\r\nvar origRealpath = fs.realpath\r\nvar origRealpathSync = fs.realpathSync\r\n\r\nvar version = process.version\r\nvar ok = /^v[0-5]\\./.test(version)\r\nvar old = require('./old.js')\r\n\r\nfunction newError (er) {\r\n  return er && er.syscall === 'realpath' && (\r\n    er.code === 'ELOOP' ||\r\n    er.code === 'ENOMEM' ||\r\n    er.code === 'ENAMETOOLONG'\r\n  )\r\n}\r\n\r\nfunction realpath (p, cache, cb) {\r\n  if (ok) {\r\n    return origRealpath(p, cache, cb)\r\n  }\r\n\r\n  if (typeof cache === 'function') {\r\n    cb = cache\r\n    cache = null\r\n  }\r\n  origRealpath(p, cache, function (er, result) {\r\n    if (newError(er)) {\r\n      old.realpath(p, cache, cb)\r\n    } else {\r\n      cb(er, result)\r\n    }\r\n  })\r\n}\r\n\r\nfunction realpathSync (p, cache) {\r\n  if (ok) {\r\n    return origRealpathSync(p, cache)\r\n  }\r\n\r\n  try {\r\n    return origRealpathSync(p, cache)\r\n  } catch (er) {\r\n    if (newError(er)) {\r\n      return old.realpathSync(p, cache)\r\n    } else {\r\n      throw er\r\n    }\r\n  }\r\n}\r\n\r\nfunction monkeypatch () {\r\n  fs.realpath = realpath\r\n  fs.realpathSync = realpathSync\r\n}\r\n\r\nfunction unmonkeypatch () {\r\n  fs.realpath = origRealpath\r\n  fs.realpathSync = origRealpathSync\r\n}\r\n","// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nvar pathModule = require('path');\r\nvar isWindows = process.platform === 'win32';\r\nvar fs = require('fs');\r\n\r\n// JavaScript implementation of realpath, ported from node pre-v6\r\n\r\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\r\n\r\nfunction rethrow() {\r\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\r\n  // is fairly slow to generate.\r\n  var callback;\r\n  if (DEBUG) {\r\n    var backtrace = new Error;\r\n    callback = debugCallback;\r\n  } else\r\n    callback = missingCallback;\r\n\r\n  return callback;\r\n\r\n  function debugCallback(err) {\r\n    if (err) {\r\n      backtrace.message = err.message;\r\n      err = backtrace;\r\n      missingCallback(err);\r\n    }\r\n  }\r\n\r\n  function missingCallback(err) {\r\n    if (err) {\r\n      if (process.throwDeprecation)\r\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\r\n      else if (!process.noDeprecation) {\r\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\r\n        if (process.traceDeprecation)\r\n          console.trace(msg);\r\n        else\r\n          console.error(msg);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction maybeCallback(cb) {\r\n  return typeof cb === 'function' ? cb : rethrow();\r\n}\r\n\r\nvar normalize = pathModule.normalize;\r\n\r\n// Regexp that finds the next partion of a (partial) path\r\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\r\nif (isWindows) {\r\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\r\n} else {\r\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\r\n}\r\n\r\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\r\nif (isWindows) {\r\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\r\n} else {\r\n  var splitRootRe = /^[\\/]*/;\r\n}\r\n\r\nexports.realpathSync = function realpathSync(p, cache) {\r\n  // make p is absolute\r\n  p = pathModule.resolve(p);\r\n\r\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\r\n    return cache[p];\r\n  }\r\n\r\n  var original = p,\r\n      seenLinks = {},\r\n      knownHard = {};\r\n\r\n  // current character position in p\r\n  var pos;\r\n  // the partial path so far, including a trailing slash if any\r\n  var current;\r\n  // the partial path without a trailing slash (except when pointing at a root)\r\n  var base;\r\n  // the partial path scanned in the previous round, with slash\r\n  var previous;\r\n\r\n  start();\r\n\r\n  function start() {\r\n    // Skip over roots\r\n    var m = splitRootRe.exec(p);\r\n    pos = m[0].length;\r\n    current = m[0];\r\n    base = m[0];\r\n    previous = '';\r\n\r\n    // On windows, check that the root exists. On unix there is no need.\r\n    if (isWindows && !knownHard[base]) {\r\n      fs.lstatSync(base);\r\n      knownHard[base] = true;\r\n    }\r\n  }\r\n\r\n  // walk down the path, swapping out linked pathparts for their real\r\n  // values\r\n  // NB: p.length changes.\r\n  while (pos < p.length) {\r\n    // find the next part\r\n    nextPartRe.lastIndex = pos;\r\n    var result = nextPartRe.exec(p);\r\n    previous = current;\r\n    current += result[0];\r\n    base = previous + result[1];\r\n    pos = nextPartRe.lastIndex;\r\n\r\n    // continue if not a symlink\r\n    if (knownHard[base] || (cache && cache[base] === base)) {\r\n      continue;\r\n    }\r\n\r\n    var resolvedLink;\r\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\r\n      // some known symbolic link.  no need to stat again.\r\n      resolvedLink = cache[base];\r\n    } else {\r\n      var stat = fs.lstatSync(base);\r\n      if (!stat.isSymbolicLink()) {\r\n        knownHard[base] = true;\r\n        if (cache) cache[base] = base;\r\n        continue;\r\n      }\r\n\r\n      // read the link if it wasn't read before\r\n      // dev/ino always return 0 on windows, so skip the check.\r\n      var linkTarget = null;\r\n      if (!isWindows) {\r\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\r\n        if (seenLinks.hasOwnProperty(id)) {\r\n          linkTarget = seenLinks[id];\r\n        }\r\n      }\r\n      if (linkTarget === null) {\r\n        fs.statSync(base);\r\n        linkTarget = fs.readlinkSync(base);\r\n      }\r\n      resolvedLink = pathModule.resolve(previous, linkTarget);\r\n      // track this, if given a cache.\r\n      if (cache) cache[base] = resolvedLink;\r\n      if (!isWindows) seenLinks[id] = linkTarget;\r\n    }\r\n\r\n    // resolve the link, then start over\r\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\r\n    start();\r\n  }\r\n\r\n  if (cache) cache[original] = p;\r\n\r\n  return p;\r\n};\r\n\r\n\r\nexports.realpath = function realpath(p, cache, cb) {\r\n  if (typeof cb !== 'function') {\r\n    cb = maybeCallback(cache);\r\n    cache = null;\r\n  }\r\n\r\n  // make p is absolute\r\n  p = pathModule.resolve(p);\r\n\r\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\r\n    return process.nextTick(cb.bind(null, null, cache[p]));\r\n  }\r\n\r\n  var original = p,\r\n      seenLinks = {},\r\n      knownHard = {};\r\n\r\n  // current character position in p\r\n  var pos;\r\n  // the partial path so far, including a trailing slash if any\r\n  var current;\r\n  // the partial path without a trailing slash (except when pointing at a root)\r\n  var base;\r\n  // the partial path scanned in the previous round, with slash\r\n  var previous;\r\n\r\n  start();\r\n\r\n  function start() {\r\n    // Skip over roots\r\n    var m = splitRootRe.exec(p);\r\n    pos = m[0].length;\r\n    current = m[0];\r\n    base = m[0];\r\n    previous = '';\r\n\r\n    // On windows, check that the root exists. On unix there is no need.\r\n    if (isWindows && !knownHard[base]) {\r\n      fs.lstat(base, function(err) {\r\n        if (err) return cb(err);\r\n        knownHard[base] = true;\r\n        LOOP();\r\n      });\r\n    } else {\r\n      process.nextTick(LOOP);\r\n    }\r\n  }\r\n\r\n  // walk down the path, swapping out linked pathparts for their real\r\n  // values\r\n  function LOOP() {\r\n    // stop if scanned past end of path\r\n    if (pos >= p.length) {\r\n      if (cache) cache[original] = p;\r\n      return cb(null, p);\r\n    }\r\n\r\n    // find the next part\r\n    nextPartRe.lastIndex = pos;\r\n    var result = nextPartRe.exec(p);\r\n    previous = current;\r\n    current += result[0];\r\n    base = previous + result[1];\r\n    pos = nextPartRe.lastIndex;\r\n\r\n    // continue if not a symlink\r\n    if (knownHard[base] || (cache && cache[base] === base)) {\r\n      return process.nextTick(LOOP);\r\n    }\r\n\r\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\r\n      // known symbolic link.  no need to stat again.\r\n      return gotResolvedLink(cache[base]);\r\n    }\r\n\r\n    return fs.lstat(base, gotStat);\r\n  }\r\n\r\n  function gotStat(err, stat) {\r\n    if (err) return cb(err);\r\n\r\n    // if not a symlink, skip to the next path part\r\n    if (!stat.isSymbolicLink()) {\r\n      knownHard[base] = true;\r\n      if (cache) cache[base] = base;\r\n      return process.nextTick(LOOP);\r\n    }\r\n\r\n    // stat & read the link if not read before\r\n    // call gotTarget as soon as the link target is known\r\n    // dev/ino always return 0 on windows, so skip the check.\r\n    if (!isWindows) {\r\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\r\n      if (seenLinks.hasOwnProperty(id)) {\r\n        return gotTarget(null, seenLinks[id], base);\r\n      }\r\n    }\r\n    fs.stat(base, function(err) {\r\n      if (err) return cb(err);\r\n\r\n      fs.readlink(base, function(err, target) {\r\n        if (!isWindows) seenLinks[id] = target;\r\n        gotTarget(err, target);\r\n      });\r\n    });\r\n  }\r\n\r\n  function gotTarget(err, target, base) {\r\n    if (err) return cb(err);\r\n\r\n    var resolvedLink = pathModule.resolve(previous, target);\r\n    if (cache) cache[base] = resolvedLink;\r\n    gotResolvedLink(resolvedLink);\r\n  }\r\n\r\n  function gotResolvedLink(resolvedLink) {\r\n    // resolve the link, then start over\r\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\r\n    start();\r\n  }\r\n};\r\n","exports.alphasort = alphasort\r\nexports.alphasorti = alphasorti\r\nexports.setopts = setopts\r\nexports.ownProp = ownProp\r\nexports.makeAbs = makeAbs\r\nexports.finish = finish\r\nexports.mark = mark\r\nexports.isIgnored = isIgnored\r\nexports.childrenIgnored = childrenIgnored\r\n\r\nfunction ownProp (obj, field) {\r\n  return Object.prototype.hasOwnProperty.call(obj, field)\r\n}\r\n\r\nvar path = require(\"path\")\r\nvar minimatch = require(\"minimatch\")\r\nvar isAbsolute = require(\"path-is-absolute\")\r\nvar Minimatch = minimatch.Minimatch\r\n\r\nfunction alphasorti (a, b) {\r\n  return a.toLowerCase().localeCompare(b.toLowerCase())\r\n}\r\n\r\nfunction alphasort (a, b) {\r\n  return a.localeCompare(b)\r\n}\r\n\r\nfunction setupIgnores (self, options) {\r\n  self.ignore = options.ignore || []\r\n\r\n  if (!Array.isArray(self.ignore))\r\n    self.ignore = [self.ignore]\r\n\r\n  if (self.ignore.length) {\r\n    self.ignore = self.ignore.map(ignoreMap)\r\n  }\r\n}\r\n\r\n// ignore patterns are always in dot:true mode.\r\nfunction ignoreMap (pattern) {\r\n  var gmatcher = null\r\n  if (pattern.slice(-3) === '/**') {\r\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\r\n    gmatcher = new Minimatch(gpattern, { dot: true })\r\n  }\r\n\r\n  return {\r\n    matcher: new Minimatch(pattern, { dot: true }),\r\n    gmatcher: gmatcher\r\n  }\r\n}\r\n\r\nfunction setopts (self, pattern, options) {\r\n  if (!options)\r\n    options = {}\r\n\r\n  // base-matching: just use globstar for that.\r\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\r\n    if (options.noglobstar) {\r\n      throw new Error(\"base matching requires globstar\")\r\n    }\r\n    pattern = \"**/\" + pattern\r\n  }\r\n\r\n  self.silent = !!options.silent\r\n  self.pattern = pattern\r\n  self.strict = options.strict !== false\r\n  self.realpath = !!options.realpath\r\n  self.realpathCache = options.realpathCache || Object.create(null)\r\n  self.follow = !!options.follow\r\n  self.dot = !!options.dot\r\n  self.mark = !!options.mark\r\n  self.nodir = !!options.nodir\r\n  if (self.nodir)\r\n    self.mark = true\r\n  self.sync = !!options.sync\r\n  self.nounique = !!options.nounique\r\n  self.nonull = !!options.nonull\r\n  self.nosort = !!options.nosort\r\n  self.nocase = !!options.nocase\r\n  self.stat = !!options.stat\r\n  self.noprocess = !!options.noprocess\r\n  self.absolute = !!options.absolute\r\n\r\n  self.maxLength = options.maxLength || Infinity\r\n  self.cache = options.cache || Object.create(null)\r\n  self.statCache = options.statCache || Object.create(null)\r\n  self.symlinks = options.symlinks || Object.create(null)\r\n\r\n  setupIgnores(self, options)\r\n\r\n  self.changedCwd = false\r\n  var cwd = process.cwd()\r\n  if (!ownProp(options, \"cwd\"))\r\n    self.cwd = cwd\r\n  else {\r\n    self.cwd = path.resolve(options.cwd)\r\n    self.changedCwd = self.cwd !== cwd\r\n  }\r\n\r\n  self.root = options.root || path.resolve(self.cwd, \"/\")\r\n  self.root = path.resolve(self.root)\r\n  if (process.platform === \"win32\")\r\n    self.root = self.root.replace(/\\\\/g, \"/\")\r\n\r\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\r\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\r\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\r\n  if (process.platform === \"win32\")\r\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\r\n  self.nomount = !!options.nomount\r\n\r\n  // disable comments and negation in Minimatch.\r\n  // Note that they are not supported in Glob itself anyway.\r\n  options.nonegate = true\r\n  options.nocomment = true\r\n\r\n  self.minimatch = new Minimatch(pattern, options)\r\n  self.options = self.minimatch.options\r\n}\r\n\r\nfunction finish (self) {\r\n  var nou = self.nounique\r\n  var all = nou ? [] : Object.create(null)\r\n\r\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\r\n    var matches = self.matches[i]\r\n    if (!matches || Object.keys(matches).length === 0) {\r\n      if (self.nonull) {\r\n        // do like the shell, and spit out the literal glob\r\n        var literal = self.minimatch.globSet[i]\r\n        if (nou)\r\n          all.push(literal)\r\n        else\r\n          all[literal] = true\r\n      }\r\n    } else {\r\n      // had matches\r\n      var m = Object.keys(matches)\r\n      if (nou)\r\n        all.push.apply(all, m)\r\n      else\r\n        m.forEach(function (m) {\r\n          all[m] = true\r\n        })\r\n    }\r\n  }\r\n\r\n  if (!nou)\r\n    all = Object.keys(all)\r\n\r\n  if (!self.nosort)\r\n    all = all.sort(self.nocase ? alphasorti : alphasort)\r\n\r\n  // at *some* point we statted all of these\r\n  if (self.mark) {\r\n    for (var i = 0; i < all.length; i++) {\r\n      all[i] = self._mark(all[i])\r\n    }\r\n    if (self.nodir) {\r\n      all = all.filter(function (e) {\r\n        var notDir = !(/\\/$/.test(e))\r\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\r\n        if (notDir && c)\r\n          notDir = c !== 'DIR' && !Array.isArray(c)\r\n        return notDir\r\n      })\r\n    }\r\n  }\r\n\r\n  if (self.ignore.length)\r\n    all = all.filter(function(m) {\r\n      return !isIgnored(self, m)\r\n    })\r\n\r\n  self.found = all\r\n}\r\n\r\nfunction mark (self, p) {\r\n  var abs = makeAbs(self, p)\r\n  var c = self.cache[abs]\r\n  var m = p\r\n  if (c) {\r\n    var isDir = c === 'DIR' || Array.isArray(c)\r\n    var slash = p.slice(-1) === '/'\r\n\r\n    if (isDir && !slash)\r\n      m += '/'\r\n    else if (!isDir && slash)\r\n      m = m.slice(0, -1)\r\n\r\n    if (m !== p) {\r\n      var mabs = makeAbs(self, m)\r\n      self.statCache[mabs] = self.statCache[abs]\r\n      self.cache[mabs] = self.cache[abs]\r\n    }\r\n  }\r\n\r\n  return m\r\n}\r\n\r\n// lotta situps...\r\nfunction makeAbs (self, f) {\r\n  var abs = f\r\n  if (f.charAt(0) === '/') {\r\n    abs = path.join(self.root, f)\r\n  } else if (isAbsolute(f) || f === '') {\r\n    abs = f\r\n  } else if (self.changedCwd) {\r\n    abs = path.resolve(self.cwd, f)\r\n  } else {\r\n    abs = path.resolve(f)\r\n  }\r\n\r\n  if (process.platform === 'win32')\r\n    abs = abs.replace(/\\\\/g, '/')\r\n\r\n  return abs\r\n}\r\n\r\n\r\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\r\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\r\nfunction isIgnored (self, path) {\r\n  if (!self.ignore.length)\r\n    return false\r\n\r\n  return self.ignore.some(function(item) {\r\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\r\n  })\r\n}\r\n\r\nfunction childrenIgnored (self, path) {\r\n  if (!self.ignore.length)\r\n    return false\r\n\r\n  return self.ignore.some(function(item) {\r\n    return !!(item.gmatcher && item.gmatcher.match(path))\r\n  })\r\n}\r\n","// Approach:\r\n//\r\n// 1. Get the minimatch set\r\n// 2. For each pattern in the set, PROCESS(pattern, false)\r\n// 3. Store matches per-set, then uniq them\r\n//\r\n// PROCESS(pattern, inGlobStar)\r\n// Get the first [n] items from pattern that are all strings\r\n// Join these together.  This is PREFIX.\r\n//   If there is no more remaining, then stat(PREFIX) and\r\n//   add to matches if it succeeds.  END.\r\n//\r\n// If inGlobStar and PREFIX is symlink and points to dir\r\n//   set ENTRIES = []\r\n// else readdir(PREFIX) as ENTRIES\r\n//   If fail, END\r\n//\r\n// with ENTRIES\r\n//   If pattern[n] is GLOBSTAR\r\n//     // handle the case where the globstar match is empty\r\n//     // by pruning it out, and testing the resulting pattern\r\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\r\n//     // handle other cases.\r\n//     for ENTRY in ENTRIES (not dotfiles)\r\n//       // attach globstar + tail onto the entry\r\n//       // Mark that this entry is a globstar match\r\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\r\n//\r\n//   else // not globstar\r\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\r\n//       Test ENTRY against pattern[n]\r\n//       If fails, continue\r\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\r\n//\r\n// Caveat:\r\n//   Cache all stats and readdirs results to minimize syscall.  Since all\r\n//   we ever care about is existence and directory-ness, we can just keep\r\n//   `true` for files, and [children,...] for directories, or `false` for\r\n//   things that don't exist.\r\n\r\nmodule.exports = glob\r\n\r\nvar fs = require('fs')\r\nvar rp = require('fs.realpath')\r\nvar minimatch = require('minimatch')\r\nvar Minimatch = minimatch.Minimatch\r\nvar inherits = require('inherits')\r\nvar EE = require('events').EventEmitter\r\nvar path = require('path')\r\nvar assert = require('assert')\r\nvar isAbsolute = require('path-is-absolute')\r\nvar globSync = require('./sync.js')\r\nvar common = require('./common.js')\r\nvar alphasort = common.alphasort\r\nvar alphasorti = common.alphasorti\r\nvar setopts = common.setopts\r\nvar ownProp = common.ownProp\r\nvar inflight = require('inflight')\r\nvar util = require('util')\r\nvar childrenIgnored = common.childrenIgnored\r\nvar isIgnored = common.isIgnored\r\n\r\nvar once = require('once')\r\n\r\nfunction glob (pattern, options, cb) {\r\n  if (typeof options === 'function') cb = options, options = {}\r\n  if (!options) options = {}\r\n\r\n  if (options.sync) {\r\n    if (cb)\r\n      throw new TypeError('callback provided to sync glob')\r\n    return globSync(pattern, options)\r\n  }\r\n\r\n  return new Glob(pattern, options, cb)\r\n}\r\n\r\nglob.sync = globSync\r\nvar GlobSync = glob.GlobSync = globSync.GlobSync\r\n\r\n// old api surface\r\nglob.glob = glob\r\n\r\nfunction extend (origin, add) {\r\n  if (add === null || typeof add !== 'object') {\r\n    return origin\r\n  }\r\n\r\n  var keys = Object.keys(add)\r\n  var i = keys.length\r\n  while (i--) {\r\n    origin[keys[i]] = add[keys[i]]\r\n  }\r\n  return origin\r\n}\r\n\r\nglob.hasMagic = function (pattern, options_) {\r\n  var options = extend({}, options_)\r\n  options.noprocess = true\r\n\r\n  var g = new Glob(pattern, options)\r\n  var set = g.minimatch.set\r\n\r\n  if (!pattern)\r\n    return false\r\n\r\n  if (set.length > 1)\r\n    return true\r\n\r\n  for (var j = 0; j < set[0].length; j++) {\r\n    if (typeof set[0][j] !== 'string')\r\n      return true\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nglob.Glob = Glob\r\ninherits(Glob, EE)\r\nfunction Glob (pattern, options, cb) {\r\n  if (typeof options === 'function') {\r\n    cb = options\r\n    options = null\r\n  }\r\n\r\n  if (options && options.sync) {\r\n    if (cb)\r\n      throw new TypeError('callback provided to sync glob')\r\n    return new GlobSync(pattern, options)\r\n  }\r\n\r\n  if (!(this instanceof Glob))\r\n    return new Glob(pattern, options, cb)\r\n\r\n  setopts(this, pattern, options)\r\n  this._didRealPath = false\r\n\r\n  // process each pattern in the minimatch set\r\n  var n = this.minimatch.set.length\r\n\r\n  // The matches are stored as {<filename>: true,...} so that\r\n  // duplicates are automagically pruned.\r\n  // Later, we do an Object.keys() on these.\r\n  // Keep them as a list so we can fill in when nonull is set.\r\n  this.matches = new Array(n)\r\n\r\n  if (typeof cb === 'function') {\r\n    cb = once(cb)\r\n    this.on('error', cb)\r\n    this.on('end', function (matches) {\r\n      cb(null, matches)\r\n    })\r\n  }\r\n\r\n  var self = this\r\n  this._processing = 0\r\n\r\n  this._emitQueue = []\r\n  this._processQueue = []\r\n  this.paused = false\r\n\r\n  if (this.noprocess)\r\n    return this\r\n\r\n  if (n === 0)\r\n    return done()\r\n\r\n  var sync = true\r\n  for (var i = 0; i < n; i ++) {\r\n    this._process(this.minimatch.set[i], i, false, done)\r\n  }\r\n  sync = false\r\n\r\n  function done () {\r\n    --self._processing\r\n    if (self._processing <= 0) {\r\n      if (sync) {\r\n        process.nextTick(function () {\r\n          self._finish()\r\n        })\r\n      } else {\r\n        self._finish()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGlob.prototype._finish = function () {\r\n  assert(this instanceof Glob)\r\n  if (this.aborted)\r\n    return\r\n\r\n  if (this.realpath && !this._didRealpath)\r\n    return this._realpath()\r\n\r\n  common.finish(this)\r\n  this.emit('end', this.found)\r\n}\r\n\r\nGlob.prototype._realpath = function () {\r\n  if (this._didRealpath)\r\n    return\r\n\r\n  this._didRealpath = true\r\n\r\n  var n = this.matches.length\r\n  if (n === 0)\r\n    return this._finish()\r\n\r\n  var self = this\r\n  for (var i = 0; i < this.matches.length; i++)\r\n    this._realpathSet(i, next)\r\n\r\n  function next () {\r\n    if (--n === 0)\r\n      self._finish()\r\n  }\r\n}\r\n\r\nGlob.prototype._realpathSet = function (index, cb) {\r\n  var matchset = this.matches[index]\r\n  if (!matchset)\r\n    return cb()\r\n\r\n  var found = Object.keys(matchset)\r\n  var self = this\r\n  var n = found.length\r\n\r\n  if (n === 0)\r\n    return cb()\r\n\r\n  var set = this.matches[index] = Object.create(null)\r\n  found.forEach(function (p, i) {\r\n    // If there's a problem with the stat, then it means that\r\n    // one or more of the links in the realpath couldn't be\r\n    // resolved.  just return the abs value in that case.\r\n    p = self._makeAbs(p)\r\n    rp.realpath(p, self.realpathCache, function (er, real) {\r\n      if (!er)\r\n        set[real] = true\r\n      else if (er.syscall === 'stat')\r\n        set[p] = true\r\n      else\r\n        self.emit('error', er) // srsly wtf right here\r\n\r\n      if (--n === 0) {\r\n        self.matches[index] = set\r\n        cb()\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nGlob.prototype._mark = function (p) {\r\n  return common.mark(this, p)\r\n}\r\n\r\nGlob.prototype._makeAbs = function (f) {\r\n  return common.makeAbs(this, f)\r\n}\r\n\r\nGlob.prototype.abort = function () {\r\n  this.aborted = true\r\n  this.emit('abort')\r\n}\r\n\r\nGlob.prototype.pause = function () {\r\n  if (!this.paused) {\r\n    this.paused = true\r\n    this.emit('pause')\r\n  }\r\n}\r\n\r\nGlob.prototype.resume = function () {\r\n  if (this.paused) {\r\n    this.emit('resume')\r\n    this.paused = false\r\n    if (this._emitQueue.length) {\r\n      var eq = this._emitQueue.slice(0)\r\n      this._emitQueue.length = 0\r\n      for (var i = 0; i < eq.length; i ++) {\r\n        var e = eq[i]\r\n        this._emitMatch(e[0], e[1])\r\n      }\r\n    }\r\n    if (this._processQueue.length) {\r\n      var pq = this._processQueue.slice(0)\r\n      this._processQueue.length = 0\r\n      for (var i = 0; i < pq.length; i ++) {\r\n        var p = pq[i]\r\n        this._processing--\r\n        this._process(p[0], p[1], p[2], p[3])\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\r\n  assert(this instanceof Glob)\r\n  assert(typeof cb === 'function')\r\n\r\n  if (this.aborted)\r\n    return\r\n\r\n  this._processing++\r\n  if (this.paused) {\r\n    this._processQueue.push([pattern, index, inGlobStar, cb])\r\n    return\r\n  }\r\n\r\n  //console.error('PROCESS %d', this._processing, pattern)\r\n\r\n  // Get the first [n] parts of pattern that are all strings.\r\n  var n = 0\r\n  while (typeof pattern[n] === 'string') {\r\n    n ++\r\n  }\r\n  // now n is the index of the first one that is *not* a string.\r\n\r\n  // see if there's anything else\r\n  var prefix\r\n  switch (n) {\r\n    // if not, then this is rather simple\r\n    case pattern.length:\r\n      this._processSimple(pattern.join('/'), index, cb)\r\n      return\r\n\r\n    case 0:\r\n      // pattern *starts* with some non-trivial item.\r\n      // going to readdir(cwd), but not include the prefix in matches.\r\n      prefix = null\r\n      break\r\n\r\n    default:\r\n      // pattern has some string bits in the front.\r\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\r\n      // or 'relative' like '../baz'\r\n      prefix = pattern.slice(0, n).join('/')\r\n      break\r\n  }\r\n\r\n  var remain = pattern.slice(n)\r\n\r\n  // get the list of entries.\r\n  var read\r\n  if (prefix === null)\r\n    read = '.'\r\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\r\n    if (!prefix || !isAbsolute(prefix))\r\n      prefix = '/' + prefix\r\n    read = prefix\r\n  } else\r\n    read = prefix\r\n\r\n  var abs = this._makeAbs(read)\r\n\r\n  //if ignored, skip _processing\r\n  if (childrenIgnored(this, read))\r\n    return cb()\r\n\r\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\r\n  if (isGlobStar)\r\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\r\n  else\r\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\r\n}\r\n\r\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\r\n  var self = this\r\n  this._readdir(abs, inGlobStar, function (er, entries) {\r\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\r\n  })\r\n}\r\n\r\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\r\n\r\n  // if the abs isn't a dir, then nothing can match!\r\n  if (!entries)\r\n    return cb()\r\n\r\n  // It will only match dot entries if it starts with a dot, or if\r\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\r\n  var pn = remain[0]\r\n  var negate = !!this.minimatch.negate\r\n  var rawGlob = pn._glob\r\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\r\n\r\n  var matchedEntries = []\r\n  for (var i = 0; i < entries.length; i++) {\r\n    var e = entries[i]\r\n    if (e.charAt(0) !== '.' || dotOk) {\r\n      var m\r\n      if (negate && !prefix) {\r\n        m = !e.match(pn)\r\n      } else {\r\n        m = e.match(pn)\r\n      }\r\n      if (m)\r\n        matchedEntries.push(e)\r\n    }\r\n  }\r\n\r\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\r\n\r\n  var len = matchedEntries.length\r\n  // If there are no matched entries, then nothing matches.\r\n  if (len === 0)\r\n    return cb()\r\n\r\n  // if this is the last remaining pattern bit, then no need for\r\n  // an additional stat *unless* the user has specified mark or\r\n  // stat explicitly.  We know they exist, since readdir returned\r\n  // them.\r\n\r\n  if (remain.length === 1 && !this.mark && !this.stat) {\r\n    if (!this.matches[index])\r\n      this.matches[index] = Object.create(null)\r\n\r\n    for (var i = 0; i < len; i ++) {\r\n      var e = matchedEntries[i]\r\n      if (prefix) {\r\n        if (prefix !== '/')\r\n          e = prefix + '/' + e\r\n        else\r\n          e = prefix + e\r\n      }\r\n\r\n      if (e.charAt(0) === '/' && !this.nomount) {\r\n        e = path.join(this.root, e)\r\n      }\r\n      this._emitMatch(index, e)\r\n    }\r\n    // This was the last one, and no stats were needed\r\n    return cb()\r\n  }\r\n\r\n  // now test all matched entries as stand-ins for that part\r\n  // of the pattern.\r\n  remain.shift()\r\n  for (var i = 0; i < len; i ++) {\r\n    var e = matchedEntries[i]\r\n    var newPattern\r\n    if (prefix) {\r\n      if (prefix !== '/')\r\n        e = prefix + '/' + e\r\n      else\r\n        e = prefix + e\r\n    }\r\n    this._process([e].concat(remain), index, inGlobStar, cb)\r\n  }\r\n  cb()\r\n}\r\n\r\nGlob.prototype._emitMatch = function (index, e) {\r\n  if (this.aborted)\r\n    return\r\n\r\n  if (isIgnored(this, e))\r\n    return\r\n\r\n  if (this.paused) {\r\n    this._emitQueue.push([index, e])\r\n    return\r\n  }\r\n\r\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\r\n\r\n  if (this.mark)\r\n    e = this._mark(e)\r\n\r\n  if (this.absolute)\r\n    e = abs\r\n\r\n  if (this.matches[index][e])\r\n    return\r\n\r\n  if (this.nodir) {\r\n    var c = this.cache[abs]\r\n    if (c === 'DIR' || Array.isArray(c))\r\n      return\r\n  }\r\n\r\n  this.matches[index][e] = true\r\n\r\n  var st = this.statCache[abs]\r\n  if (st)\r\n    this.emit('stat', e, st)\r\n\r\n  this.emit('match', e)\r\n}\r\n\r\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\r\n  if (this.aborted)\r\n    return\r\n\r\n  // follow all symlinked directories forever\r\n  // just proceed as if this is a non-globstar situation\r\n  if (this.follow)\r\n    return this._readdir(abs, false, cb)\r\n\r\n  var lstatkey = 'lstat\\0' + abs\r\n  var self = this\r\n  var lstatcb = inflight(lstatkey, lstatcb_)\r\n\r\n  if (lstatcb)\r\n    fs.lstat(abs, lstatcb)\r\n\r\n  function lstatcb_ (er, lstat) {\r\n    if (er && er.code === 'ENOENT')\r\n      return cb()\r\n\r\n    var isSym = lstat && lstat.isSymbolicLink()\r\n    self.symlinks[abs] = isSym\r\n\r\n    // If it's not a symlink or a dir, then it's definitely a regular file.\r\n    // don't bother doing a readdir in that case.\r\n    if (!isSym && lstat && !lstat.isDirectory()) {\r\n      self.cache[abs] = 'FILE'\r\n      cb()\r\n    } else\r\n      self._readdir(abs, false, cb)\r\n  }\r\n}\r\n\r\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\r\n  if (this.aborted)\r\n    return\r\n\r\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\r\n  if (!cb)\r\n    return\r\n\r\n  //console.error('RD %j %j', +inGlobStar, abs)\r\n  if (inGlobStar && !ownProp(this.symlinks, abs))\r\n    return this._readdirInGlobStar(abs, cb)\r\n\r\n  if (ownProp(this.cache, abs)) {\r\n    var c = this.cache[abs]\r\n    if (!c || c === 'FILE')\r\n      return cb()\r\n\r\n    if (Array.isArray(c))\r\n      return cb(null, c)\r\n  }\r\n\r\n  var self = this\r\n  fs.readdir(abs, readdirCb(this, abs, cb))\r\n}\r\n\r\nfunction readdirCb (self, abs, cb) {\r\n  return function (er, entries) {\r\n    if (er)\r\n      self._readdirError(abs, er, cb)\r\n    else\r\n      self._readdirEntries(abs, entries, cb)\r\n  }\r\n}\r\n\r\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\r\n  if (this.aborted)\r\n    return\r\n\r\n  // if we haven't asked to stat everything, then just\r\n  // assume that everything in there exists, so we can avoid\r\n  // having to stat it a second time.\r\n  if (!this.mark && !this.stat) {\r\n    for (var i = 0; i < entries.length; i ++) {\r\n      var e = entries[i]\r\n      if (abs === '/')\r\n        e = abs + e\r\n      else\r\n        e = abs + '/' + e\r\n      this.cache[e] = true\r\n    }\r\n  }\r\n\r\n  this.cache[abs] = entries\r\n  return cb(null, entries)\r\n}\r\n\r\nGlob.prototype._readdirError = function (f, er, cb) {\r\n  if (this.aborted)\r\n    return\r\n\r\n  // handle errors, and cache the information\r\n  switch (er.code) {\r\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\r\n    case 'ENOTDIR': // totally normal. means it *does* exist.\r\n      var abs = this._makeAbs(f)\r\n      this.cache[abs] = 'FILE'\r\n      if (abs === this.cwdAbs) {\r\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\r\n        error.path = this.cwd\r\n        error.code = er.code\r\n        this.emit('error', error)\r\n        this.abort()\r\n      }\r\n      break\r\n\r\n    case 'ENOENT': // not terribly unusual\r\n    case 'ELOOP':\r\n    case 'ENAMETOOLONG':\r\n    case 'UNKNOWN':\r\n      this.cache[this._makeAbs(f)] = false\r\n      break\r\n\r\n    default: // some unusual error.  Treat as failure.\r\n      this.cache[this._makeAbs(f)] = false\r\n      if (this.strict) {\r\n        this.emit('error', er)\r\n        // If the error is handled, then we abort\r\n        // if not, we threw out of here\r\n        this.abort()\r\n      }\r\n      if (!this.silent)\r\n        console.error('glob error', er)\r\n      break\r\n  }\r\n\r\n  return cb()\r\n}\r\n\r\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\r\n  var self = this\r\n  this._readdir(abs, inGlobStar, function (er, entries) {\r\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\r\n  })\r\n}\r\n\r\n\r\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\r\n  //console.error('pgs2', prefix, remain[0], entries)\r\n\r\n  // no entries means not a dir, so it can never have matches\r\n  // foo.txt/** doesn't match foo.txt\r\n  if (!entries)\r\n    return cb()\r\n\r\n  // test without the globstar, and with every child both below\r\n  // and replacing the globstar.\r\n  var remainWithoutGlobStar = remain.slice(1)\r\n  var gspref = prefix ? [ prefix ] : []\r\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\r\n\r\n  // the noGlobStar pattern exits the inGlobStar state\r\n  this._process(noGlobStar, index, false, cb)\r\n\r\n  var isSym = this.symlinks[abs]\r\n  var len = entries.length\r\n\r\n  // If it's a symlink, and we're in a globstar, then stop\r\n  if (isSym && inGlobStar)\r\n    return cb()\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    var e = entries[i]\r\n    if (e.charAt(0) === '.' && !this.dot)\r\n      continue\r\n\r\n    // these two cases enter the inGlobStar state\r\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\r\n    this._process(instead, index, true, cb)\r\n\r\n    var below = gspref.concat(entries[i], remain)\r\n    this._process(below, index, true, cb)\r\n  }\r\n\r\n  cb()\r\n}\r\n\r\nGlob.prototype._processSimple = function (prefix, index, cb) {\r\n  // XXX review this.  Shouldn't it be doing the mounting etc\r\n  // before doing stat?  kinda weird?\r\n  var self = this\r\n  this._stat(prefix, function (er, exists) {\r\n    self._processSimple2(prefix, index, er, exists, cb)\r\n  })\r\n}\r\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\r\n\r\n  //console.error('ps2', prefix, exists)\r\n\r\n  if (!this.matches[index])\r\n    this.matches[index] = Object.create(null)\r\n\r\n  // If it doesn't exist, then just mark the lack of results\r\n  if (!exists)\r\n    return cb()\r\n\r\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\r\n    var trail = /[\\/\\\\]$/.test(prefix)\r\n    if (prefix.charAt(0) === '/') {\r\n      prefix = path.join(this.root, prefix)\r\n    } else {\r\n      prefix = path.resolve(this.root, prefix)\r\n      if (trail)\r\n        prefix += '/'\r\n    }\r\n  }\r\n\r\n  if (process.platform === 'win32')\r\n    prefix = prefix.replace(/\\\\/g, '/')\r\n\r\n  // Mark this as a match\r\n  this._emitMatch(index, prefix)\r\n  cb()\r\n}\r\n\r\n// Returns either 'DIR', 'FILE', or false\r\nGlob.prototype._stat = function (f, cb) {\r\n  var abs = this._makeAbs(f)\r\n  var needDir = f.slice(-1) === '/'\r\n\r\n  if (f.length > this.maxLength)\r\n    return cb()\r\n\r\n  if (!this.stat && ownProp(this.cache, abs)) {\r\n    var c = this.cache[abs]\r\n\r\n    if (Array.isArray(c))\r\n      c = 'DIR'\r\n\r\n    // It exists, but maybe not how we need it\r\n    if (!needDir || c === 'DIR')\r\n      return cb(null, c)\r\n\r\n    if (needDir && c === 'FILE')\r\n      return cb()\r\n\r\n    // otherwise we have to stat, because maybe c=true\r\n    // if we know it exists, but not what it is.\r\n  }\r\n\r\n  var exists\r\n  var stat = this.statCache[abs]\r\n  if (stat !== undefined) {\r\n    if (stat === false)\r\n      return cb(null, stat)\r\n    else {\r\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\r\n      if (needDir && type === 'FILE')\r\n        return cb()\r\n      else\r\n        return cb(null, type, stat)\r\n    }\r\n  }\r\n\r\n  var self = this\r\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\r\n  if (statcb)\r\n    fs.lstat(abs, statcb)\r\n\r\n  function lstatcb_ (er, lstat) {\r\n    if (lstat && lstat.isSymbolicLink()) {\r\n      // If it's a symlink, then treat it as the target, unless\r\n      // the target does not exist, then treat it as a file.\r\n      return fs.stat(abs, function (er, stat) {\r\n        if (er)\r\n          self._stat2(f, abs, null, lstat, cb)\r\n        else\r\n          self._stat2(f, abs, er, stat, cb)\r\n      })\r\n    } else {\r\n      self._stat2(f, abs, er, lstat, cb)\r\n    }\r\n  }\r\n}\r\n\r\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\r\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\r\n    this.statCache[abs] = false\r\n    return cb()\r\n  }\r\n\r\n  var needDir = f.slice(-1) === '/'\r\n  this.statCache[abs] = stat\r\n\r\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\r\n    return cb(null, false, stat)\r\n\r\n  var c = true\r\n  if (stat)\r\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\r\n  this.cache[abs] = this.cache[abs] || c\r\n\r\n  if (needDir && c === 'FILE')\r\n    return cb()\r\n\r\n  return cb(null, c, stat)\r\n}\r\n","module.exports = globSync\r\nglobSync.GlobSync = GlobSync\r\n\r\nvar fs = require('fs')\r\nvar rp = require('fs.realpath')\r\nvar minimatch = require('minimatch')\r\nvar Minimatch = minimatch.Minimatch\r\nvar Glob = require('./glob.js').Glob\r\nvar util = require('util')\r\nvar path = require('path')\r\nvar assert = require('assert')\r\nvar isAbsolute = require('path-is-absolute')\r\nvar common = require('./common.js')\r\nvar alphasort = common.alphasort\r\nvar alphasorti = common.alphasorti\r\nvar setopts = common.setopts\r\nvar ownProp = common.ownProp\r\nvar childrenIgnored = common.childrenIgnored\r\nvar isIgnored = common.isIgnored\r\n\r\nfunction globSync (pattern, options) {\r\n  if (typeof options === 'function' || arguments.length === 3)\r\n    throw new TypeError('callback provided to sync glob\\n'+\r\n                        'See: https://github.com/isaacs/node-glob/issues/167')\r\n\r\n  return new GlobSync(pattern, options).found\r\n}\r\n\r\nfunction GlobSync (pattern, options) {\r\n  if (!pattern)\r\n    throw new Error('must provide pattern')\r\n\r\n  if (typeof options === 'function' || arguments.length === 3)\r\n    throw new TypeError('callback provided to sync glob\\n'+\r\n                        'See: https://github.com/isaacs/node-glob/issues/167')\r\n\r\n  if (!(this instanceof GlobSync))\r\n    return new GlobSync(pattern, options)\r\n\r\n  setopts(this, pattern, options)\r\n\r\n  if (this.noprocess)\r\n    return this\r\n\r\n  var n = this.minimatch.set.length\r\n  this.matches = new Array(n)\r\n  for (var i = 0; i < n; i ++) {\r\n    this._process(this.minimatch.set[i], i, false)\r\n  }\r\n  this._finish()\r\n}\r\n\r\nGlobSync.prototype._finish = function () {\r\n  assert(this instanceof GlobSync)\r\n  if (this.realpath) {\r\n    var self = this\r\n    this.matches.forEach(function (matchset, index) {\r\n      var set = self.matches[index] = Object.create(null)\r\n      for (var p in matchset) {\r\n        try {\r\n          p = self._makeAbs(p)\r\n          var real = rp.realpathSync(p, self.realpathCache)\r\n          set[real] = true\r\n        } catch (er) {\r\n          if (er.syscall === 'stat')\r\n            set[self._makeAbs(p)] = true\r\n          else\r\n            throw er\r\n        }\r\n      }\r\n    })\r\n  }\r\n  common.finish(this)\r\n}\r\n\r\n\r\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\r\n  assert(this instanceof GlobSync)\r\n\r\n  // Get the first [n] parts of pattern that are all strings.\r\n  var n = 0\r\n  while (typeof pattern[n] === 'string') {\r\n    n ++\r\n  }\r\n  // now n is the index of the first one that is *not* a string.\r\n\r\n  // See if there's anything else\r\n  var prefix\r\n  switch (n) {\r\n    // if not, then this is rather simple\r\n    case pattern.length:\r\n      this._processSimple(pattern.join('/'), index)\r\n      return\r\n\r\n    case 0:\r\n      // pattern *starts* with some non-trivial item.\r\n      // going to readdir(cwd), but not include the prefix in matches.\r\n      prefix = null\r\n      break\r\n\r\n    default:\r\n      // pattern has some string bits in the front.\r\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\r\n      // or 'relative' like '../baz'\r\n      prefix = pattern.slice(0, n).join('/')\r\n      break\r\n  }\r\n\r\n  var remain = pattern.slice(n)\r\n\r\n  // get the list of entries.\r\n  var read\r\n  if (prefix === null)\r\n    read = '.'\r\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\r\n    if (!prefix || !isAbsolute(prefix))\r\n      prefix = '/' + prefix\r\n    read = prefix\r\n  } else\r\n    read = prefix\r\n\r\n  var abs = this._makeAbs(read)\r\n\r\n  //if ignored, skip processing\r\n  if (childrenIgnored(this, read))\r\n    return\r\n\r\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\r\n  if (isGlobStar)\r\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\r\n  else\r\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\r\n}\r\n\r\n\r\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\r\n  var entries = this._readdir(abs, inGlobStar)\r\n\r\n  // if the abs isn't a dir, then nothing can match!\r\n  if (!entries)\r\n    return\r\n\r\n  // It will only match dot entries if it starts with a dot, or if\r\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\r\n  var pn = remain[0]\r\n  var negate = !!this.minimatch.negate\r\n  var rawGlob = pn._glob\r\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\r\n\r\n  var matchedEntries = []\r\n  for (var i = 0; i < entries.length; i++) {\r\n    var e = entries[i]\r\n    if (e.charAt(0) !== '.' || dotOk) {\r\n      var m\r\n      if (negate && !prefix) {\r\n        m = !e.match(pn)\r\n      } else {\r\n        m = e.match(pn)\r\n      }\r\n      if (m)\r\n        matchedEntries.push(e)\r\n    }\r\n  }\r\n\r\n  var len = matchedEntries.length\r\n  // If there are no matched entries, then nothing matches.\r\n  if (len === 0)\r\n    return\r\n\r\n  // if this is the last remaining pattern bit, then no need for\r\n  // an additional stat *unless* the user has specified mark or\r\n  // stat explicitly.  We know they exist, since readdir returned\r\n  // them.\r\n\r\n  if (remain.length === 1 && !this.mark && !this.stat) {\r\n    if (!this.matches[index])\r\n      this.matches[index] = Object.create(null)\r\n\r\n    for (var i = 0; i < len; i ++) {\r\n      var e = matchedEntries[i]\r\n      if (prefix) {\r\n        if (prefix.slice(-1) !== '/')\r\n          e = prefix + '/' + e\r\n        else\r\n          e = prefix + e\r\n      }\r\n\r\n      if (e.charAt(0) === '/' && !this.nomount) {\r\n        e = path.join(this.root, e)\r\n      }\r\n      this._emitMatch(index, e)\r\n    }\r\n    // This was the last one, and no stats were needed\r\n    return\r\n  }\r\n\r\n  // now test all matched entries as stand-ins for that part\r\n  // of the pattern.\r\n  remain.shift()\r\n  for (var i = 0; i < len; i ++) {\r\n    var e = matchedEntries[i]\r\n    var newPattern\r\n    if (prefix)\r\n      newPattern = [prefix, e]\r\n    else\r\n      newPattern = [e]\r\n    this._process(newPattern.concat(remain), index, inGlobStar)\r\n  }\r\n}\r\n\r\n\r\nGlobSync.prototype._emitMatch = function (index, e) {\r\n  if (isIgnored(this, e))\r\n    return\r\n\r\n  var abs = this._makeAbs(e)\r\n\r\n  if (this.mark)\r\n    e = this._mark(e)\r\n\r\n  if (this.absolute) {\r\n    e = abs\r\n  }\r\n\r\n  if (this.matches[index][e])\r\n    return\r\n\r\n  if (this.nodir) {\r\n    var c = this.cache[abs]\r\n    if (c === 'DIR' || Array.isArray(c))\r\n      return\r\n  }\r\n\r\n  this.matches[index][e] = true\r\n\r\n  if (this.stat)\r\n    this._stat(e)\r\n}\r\n\r\n\r\nGlobSync.prototype._readdirInGlobStar = function (abs) {\r\n  // follow all symlinked directories forever\r\n  // just proceed as if this is a non-globstar situation\r\n  if (this.follow)\r\n    return this._readdir(abs, false)\r\n\r\n  var entries\r\n  var lstat\r\n  var stat\r\n  try {\r\n    lstat = fs.lstatSync(abs)\r\n  } catch (er) {\r\n    if (er.code === 'ENOENT') {\r\n      // lstat failed, doesn't exist\r\n      return null\r\n    }\r\n  }\r\n\r\n  var isSym = lstat && lstat.isSymbolicLink()\r\n  this.symlinks[abs] = isSym\r\n\r\n  // If it's not a symlink or a dir, then it's definitely a regular file.\r\n  // don't bother doing a readdir in that case.\r\n  if (!isSym && lstat && !lstat.isDirectory())\r\n    this.cache[abs] = 'FILE'\r\n  else\r\n    entries = this._readdir(abs, false)\r\n\r\n  return entries\r\n}\r\n\r\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\r\n  var entries\r\n\r\n  if (inGlobStar && !ownProp(this.symlinks, abs))\r\n    return this._readdirInGlobStar(abs)\r\n\r\n  if (ownProp(this.cache, abs)) {\r\n    var c = this.cache[abs]\r\n    if (!c || c === 'FILE')\r\n      return null\r\n\r\n    if (Array.isArray(c))\r\n      return c\r\n  }\r\n\r\n  try {\r\n    return this._readdirEntries(abs, fs.readdirSync(abs))\r\n  } catch (er) {\r\n    this._readdirError(abs, er)\r\n    return null\r\n  }\r\n}\r\n\r\nGlobSync.prototype._readdirEntries = function (abs, entries) {\r\n  // if we haven't asked to stat everything, then just\r\n  // assume that everything in there exists, so we can avoid\r\n  // having to stat it a second time.\r\n  if (!this.mark && !this.stat) {\r\n    for (var i = 0; i < entries.length; i ++) {\r\n      var e = entries[i]\r\n      if (abs === '/')\r\n        e = abs + e\r\n      else\r\n        e = abs + '/' + e\r\n      this.cache[e] = true\r\n    }\r\n  }\r\n\r\n  this.cache[abs] = entries\r\n\r\n  // mark and cache dir-ness\r\n  return entries\r\n}\r\n\r\nGlobSync.prototype._readdirError = function (f, er) {\r\n  // handle errors, and cache the information\r\n  switch (er.code) {\r\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\r\n    case 'ENOTDIR': // totally normal. means it *does* exist.\r\n      var abs = this._makeAbs(f)\r\n      this.cache[abs] = 'FILE'\r\n      if (abs === this.cwdAbs) {\r\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\r\n        error.path = this.cwd\r\n        error.code = er.code\r\n        throw error\r\n      }\r\n      break\r\n\r\n    case 'ENOENT': // not terribly unusual\r\n    case 'ELOOP':\r\n    case 'ENAMETOOLONG':\r\n    case 'UNKNOWN':\r\n      this.cache[this._makeAbs(f)] = false\r\n      break\r\n\r\n    default: // some unusual error.  Treat as failure.\r\n      this.cache[this._makeAbs(f)] = false\r\n      if (this.strict)\r\n        throw er\r\n      if (!this.silent)\r\n        console.error('glob error', er)\r\n      break\r\n  }\r\n}\r\n\r\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\r\n\r\n  var entries = this._readdir(abs, inGlobStar)\r\n\r\n  // no entries means not a dir, so it can never have matches\r\n  // foo.txt/** doesn't match foo.txt\r\n  if (!entries)\r\n    return\r\n\r\n  // test without the globstar, and with every child both below\r\n  // and replacing the globstar.\r\n  var remainWithoutGlobStar = remain.slice(1)\r\n  var gspref = prefix ? [ prefix ] : []\r\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\r\n\r\n  // the noGlobStar pattern exits the inGlobStar state\r\n  this._process(noGlobStar, index, false)\r\n\r\n  var len = entries.length\r\n  var isSym = this.symlinks[abs]\r\n\r\n  // If it's a symlink, and we're in a globstar, then stop\r\n  if (isSym && inGlobStar)\r\n    return\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    var e = entries[i]\r\n    if (e.charAt(0) === '.' && !this.dot)\r\n      continue\r\n\r\n    // these two cases enter the inGlobStar state\r\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\r\n    this._process(instead, index, true)\r\n\r\n    var below = gspref.concat(entries[i], remain)\r\n    this._process(below, index, true)\r\n  }\r\n}\r\n\r\nGlobSync.prototype._processSimple = function (prefix, index) {\r\n  // XXX review this.  Shouldn't it be doing the mounting etc\r\n  // before doing stat?  kinda weird?\r\n  var exists = this._stat(prefix)\r\n\r\n  if (!this.matches[index])\r\n    this.matches[index] = Object.create(null)\r\n\r\n  // If it doesn't exist, then just mark the lack of results\r\n  if (!exists)\r\n    return\r\n\r\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\r\n    var trail = /[\\/\\\\]$/.test(prefix)\r\n    if (prefix.charAt(0) === '/') {\r\n      prefix = path.join(this.root, prefix)\r\n    } else {\r\n      prefix = path.resolve(this.root, prefix)\r\n      if (trail)\r\n        prefix += '/'\r\n    }\r\n  }\r\n\r\n  if (process.platform === 'win32')\r\n    prefix = prefix.replace(/\\\\/g, '/')\r\n\r\n  // Mark this as a match\r\n  this._emitMatch(index, prefix)\r\n}\r\n\r\n// Returns either 'DIR', 'FILE', or false\r\nGlobSync.prototype._stat = function (f) {\r\n  var abs = this._makeAbs(f)\r\n  var needDir = f.slice(-1) === '/'\r\n\r\n  if (f.length > this.maxLength)\r\n    return false\r\n\r\n  if (!this.stat && ownProp(this.cache, abs)) {\r\n    var c = this.cache[abs]\r\n\r\n    if (Array.isArray(c))\r\n      c = 'DIR'\r\n\r\n    // It exists, but maybe not how we need it\r\n    if (!needDir || c === 'DIR')\r\n      return c\r\n\r\n    if (needDir && c === 'FILE')\r\n      return false\r\n\r\n    // otherwise we have to stat, because maybe c=true\r\n    // if we know it exists, but not what it is.\r\n  }\r\n\r\n  var exists\r\n  var stat = this.statCache[abs]\r\n  if (!stat) {\r\n    var lstat\r\n    try {\r\n      lstat = fs.lstatSync(abs)\r\n    } catch (er) {\r\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\r\n        this.statCache[abs] = false\r\n        return false\r\n      }\r\n    }\r\n\r\n    if (lstat && lstat.isSymbolicLink()) {\r\n      try {\r\n        stat = fs.statSync(abs)\r\n      } catch (er) {\r\n        stat = lstat\r\n      }\r\n    } else {\r\n      stat = lstat\r\n    }\r\n  }\r\n\r\n  this.statCache[abs] = stat\r\n\r\n  var c = true\r\n  if (stat)\r\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\r\n\r\n  this.cache[abs] = this.cache[abs] || c\r\n\r\n  if (needDir && c === 'FILE')\r\n    return false\r\n\r\n  return c\r\n}\r\n\r\nGlobSync.prototype._mark = function (p) {\r\n  return common.mark(this, p)\r\n}\r\n\r\nGlobSync.prototype._makeAbs = function (f) {\r\n  return common.makeAbs(this, f)\r\n}\r\n","var wrappy = require('wrappy')\r\nvar reqs = Object.create(null)\r\nvar once = require('once')\r\n\r\nmodule.exports = wrappy(inflight)\r\n\r\nfunction inflight (key, cb) {\r\n  if (reqs[key]) {\r\n    reqs[key].push(cb)\r\n    return null\r\n  } else {\r\n    reqs[key] = [cb]\r\n    return makeres(key)\r\n  }\r\n}\r\n\r\nfunction makeres (key) {\r\n  return once(function RES () {\r\n    var cbs = reqs[key]\r\n    var len = cbs.length\r\n    var args = slice(arguments)\r\n\r\n    // XXX It's somewhat ambiguous whether a new callback added in this\r\n    // pass should be queued for later execution if something in the\r\n    // list of callbacks throws, or if it should just be discarded.\r\n    // However, it's such an edge case that it hardly matters, and either\r\n    // choice is likely as surprising as the other.\r\n    // As it happens, we do go ahead and schedule it for later execution.\r\n    try {\r\n      for (var i = 0; i < len; i++) {\r\n        cbs[i].apply(null, args)\r\n      }\r\n    } finally {\r\n      if (cbs.length > len) {\r\n        // added more in the interim.\r\n        // de-zalgo, just in case, but don't call again.\r\n        cbs.splice(0, len)\r\n        process.nextTick(function () {\r\n          RES.apply(null, args)\r\n        })\r\n      } else {\r\n        delete reqs[key]\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nfunction slice (args) {\r\n  var length = args.length\r\n  var array = []\r\n\r\n  for (var i = 0; i < length; i++) array[i] = args[i]\r\n  return array\r\n}\r\n","try {\n  var util = require('util');\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = minimatch\r\nminimatch.Minimatch = Minimatch\r\n\r\nvar path = { sep: '/' }\r\ntry {\r\n  path = require('path')\r\n} catch (er) {}\r\n\r\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\r\nvar expand = require('brace-expansion')\r\n\r\nvar plTypes = {\r\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\r\n  '?': { open: '(?:', close: ')?' },\r\n  '+': { open: '(?:', close: ')+' },\r\n  '*': { open: '(?:', close: ')*' },\r\n  '@': { open: '(?:', close: ')' }\r\n}\r\n\r\n// any single thing other than /\r\n// don't need to escape / when using new RegExp()\r\nvar qmark = '[^/]'\r\n\r\n// * => any number of characters\r\nvar star = qmark + '*?'\r\n\r\n// ** when dots are allowed.  Anything goes, except .. and .\r\n// not (^ or / followed by one or two dots followed by $ or /),\r\n// followed by anything, any number of times.\r\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\r\n\r\n// not a ^ or / followed by a dot,\r\n// followed by anything, any number of times.\r\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\r\n\r\n// characters that need to be escaped in RegExp.\r\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\r\n\r\n// \"abc\" -> { a:true, b:true, c:true }\r\nfunction charSet (s) {\r\n  return s.split('').reduce(function (set, c) {\r\n    set[c] = true\r\n    return set\r\n  }, {})\r\n}\r\n\r\n// normalizes slashes.\r\nvar slashSplit = /\\/+/\r\n\r\nminimatch.filter = filter\r\nfunction filter (pattern, options) {\r\n  options = options || {}\r\n  return function (p, i, list) {\r\n    return minimatch(p, pattern, options)\r\n  }\r\n}\r\n\r\nfunction ext (a, b) {\r\n  a = a || {}\r\n  b = b || {}\r\n  var t = {}\r\n  Object.keys(b).forEach(function (k) {\r\n    t[k] = b[k]\r\n  })\r\n  Object.keys(a).forEach(function (k) {\r\n    t[k] = a[k]\r\n  })\r\n  return t\r\n}\r\n\r\nminimatch.defaults = function (def) {\r\n  if (!def || !Object.keys(def).length) return minimatch\r\n\r\n  var orig = minimatch\r\n\r\n  var m = function minimatch (p, pattern, options) {\r\n    return orig.minimatch(p, pattern, ext(def, options))\r\n  }\r\n\r\n  m.Minimatch = function Minimatch (pattern, options) {\r\n    return new orig.Minimatch(pattern, ext(def, options))\r\n  }\r\n\r\n  return m\r\n}\r\n\r\nMinimatch.defaults = function (def) {\r\n  if (!def || !Object.keys(def).length) return Minimatch\r\n  return minimatch.defaults(def).Minimatch\r\n}\r\n\r\nfunction minimatch (p, pattern, options) {\r\n  if (typeof pattern !== 'string') {\r\n    throw new TypeError('glob pattern string required')\r\n  }\r\n\r\n  if (!options) options = {}\r\n\r\n  // shortcut: comments match nothing.\r\n  if (!options.nocomment && pattern.charAt(0) === '#') {\r\n    return false\r\n  }\r\n\r\n  // \"\" only matches \"\"\r\n  if (pattern.trim() === '') return p === ''\r\n\r\n  return new Minimatch(pattern, options).match(p)\r\n}\r\n\r\nfunction Minimatch (pattern, options) {\r\n  if (!(this instanceof Minimatch)) {\r\n    return new Minimatch(pattern, options)\r\n  }\r\n\r\n  if (typeof pattern !== 'string') {\r\n    throw new TypeError('glob pattern string required')\r\n  }\r\n\r\n  if (!options) options = {}\r\n  pattern = pattern.trim()\r\n\r\n  // windows support: need to use /, not \\\r\n  if (path.sep !== '/') {\r\n    pattern = pattern.split(path.sep).join('/')\r\n  }\r\n\r\n  this.options = options\r\n  this.set = []\r\n  this.pattern = pattern\r\n  this.regexp = null\r\n  this.negate = false\r\n  this.comment = false\r\n  this.empty = false\r\n\r\n  // make the set of regexps etc.\r\n  this.make()\r\n}\r\n\r\nMinimatch.prototype.debug = function () {}\r\n\r\nMinimatch.prototype.make = make\r\nfunction make () {\r\n  // don't do it more than once.\r\n  if (this._made) return\r\n\r\n  var pattern = this.pattern\r\n  var options = this.options\r\n\r\n  // empty patterns and comments match nothing.\r\n  if (!options.nocomment && pattern.charAt(0) === '#') {\r\n    this.comment = true\r\n    return\r\n  }\r\n  if (!pattern) {\r\n    this.empty = true\r\n    return\r\n  }\r\n\r\n  // step 1: figure out negation, etc.\r\n  this.parseNegate()\r\n\r\n  // step 2: expand braces\r\n  var set = this.globSet = this.braceExpand()\r\n\r\n  if (options.debug) this.debug = console.error\r\n\r\n  this.debug(this.pattern, set)\r\n\r\n  // step 3: now we have a set, so turn each one into a series of path-portion\r\n  // matching patterns.\r\n  // These will be regexps, except in the case of \"**\", which is\r\n  // set to the GLOBSTAR object for globstar behavior,\r\n  // and will not contain any / characters\r\n  set = this.globParts = set.map(function (s) {\r\n    return s.split(slashSplit)\r\n  })\r\n\r\n  this.debug(this.pattern, set)\r\n\r\n  // glob --> regexps\r\n  set = set.map(function (s, si, set) {\r\n    return s.map(this.parse, this)\r\n  }, this)\r\n\r\n  this.debug(this.pattern, set)\r\n\r\n  // filter out everything that didn't compile properly.\r\n  set = set.filter(function (s) {\r\n    return s.indexOf(false) === -1\r\n  })\r\n\r\n  this.debug(this.pattern, set)\r\n\r\n  this.set = set\r\n}\r\n\r\nMinimatch.prototype.parseNegate = parseNegate\r\nfunction parseNegate () {\r\n  var pattern = this.pattern\r\n  var negate = false\r\n  var options = this.options\r\n  var negateOffset = 0\r\n\r\n  if (options.nonegate) return\r\n\r\n  for (var i = 0, l = pattern.length\r\n    ; i < l && pattern.charAt(i) === '!'\r\n    ; i++) {\r\n    negate = !negate\r\n    negateOffset++\r\n  }\r\n\r\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\r\n  this.negate = negate\r\n}\r\n\r\n// Brace expansion:\r\n// a{b,c}d -> abd acd\r\n// a{b,}c -> abc ac\r\n// a{0..3}d -> a0d a1d a2d a3d\r\n// a{b,c{d,e}f}g -> abg acdfg acefg\r\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\r\n//\r\n// Invalid sets are not expanded.\r\n// a{2..}b -> a{2..}b\r\n// a{b}c -> a{b}c\r\nminimatch.braceExpand = function (pattern, options) {\r\n  return braceExpand(pattern, options)\r\n}\r\n\r\nMinimatch.prototype.braceExpand = braceExpand\r\n\r\nfunction braceExpand (pattern, options) {\r\n  if (!options) {\r\n    if (this instanceof Minimatch) {\r\n      options = this.options\r\n    } else {\r\n      options = {}\r\n    }\r\n  }\r\n\r\n  pattern = typeof pattern === 'undefined'\r\n    ? this.pattern : pattern\r\n\r\n  if (typeof pattern === 'undefined') {\r\n    throw new TypeError('undefined pattern')\r\n  }\r\n\r\n  if (options.nobrace ||\r\n    !pattern.match(/\\{.*\\}/)) {\r\n    // shortcut. no need to expand.\r\n    return [pattern]\r\n  }\r\n\r\n  return expand(pattern)\r\n}\r\n\r\n// parse a component of the expanded set.\r\n// At this point, no pattern may contain \"/\" in it\r\n// so we're going to return a 2d array, where each entry is the full\r\n// pattern, split on '/', and then turned into a regular expression.\r\n// A regexp is made at the end which joins each array with an\r\n// escaped /, and another full one which joins each regexp with |.\r\n//\r\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\r\n// when it is the *only* thing in a path portion.  Otherwise, any series\r\n// of * is equivalent to a single *.  Globstar behavior is enabled by\r\n// default, and can be disabled by setting options.noglobstar.\r\nMinimatch.prototype.parse = parse\r\nvar SUBPARSE = {}\r\nfunction parse (pattern, isSub) {\r\n  if (pattern.length > 1024 * 64) {\r\n    throw new TypeError('pattern is too long')\r\n  }\r\n\r\n  var options = this.options\r\n\r\n  // shortcuts\r\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\r\n  if (pattern === '') return ''\r\n\r\n  var re = ''\r\n  var hasMagic = !!options.nocase\r\n  var escaping = false\r\n  // ? => one single character\r\n  var patternListStack = []\r\n  var negativeLists = []\r\n  var stateChar\r\n  var inClass = false\r\n  var reClassStart = -1\r\n  var classStart = -1\r\n  // . and .. never match anything that doesn't start with .,\r\n  // even when options.dot is set.\r\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\r\n  // not (start or / followed by . or .. followed by / or end)\r\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\r\n  : '(?!\\\\.)'\r\n  var self = this\r\n\r\n  function clearStateChar () {\r\n    if (stateChar) {\r\n      // we had some state-tracking character\r\n      // that wasn't consumed by this pass.\r\n      switch (stateChar) {\r\n        case '*':\r\n          re += star\r\n          hasMagic = true\r\n        break\r\n        case '?':\r\n          re += qmark\r\n          hasMagic = true\r\n        break\r\n        default:\r\n          re += '\\\\' + stateChar\r\n        break\r\n      }\r\n      self.debug('clearStateChar %j %j', stateChar, re)\r\n      stateChar = false\r\n    }\r\n  }\r\n\r\n  for (var i = 0, len = pattern.length, c\r\n    ; (i < len) && (c = pattern.charAt(i))\r\n    ; i++) {\r\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\r\n\r\n    // skip over any that are escaped.\r\n    if (escaping && reSpecials[c]) {\r\n      re += '\\\\' + c\r\n      escaping = false\r\n      continue\r\n    }\r\n\r\n    switch (c) {\r\n      case '/':\r\n        // completely not allowed, even escaped.\r\n        // Should already be path-split by now.\r\n        return false\r\n\r\n      case '\\\\':\r\n        clearStateChar()\r\n        escaping = true\r\n      continue\r\n\r\n      // the various stateChar values\r\n      // for the \"extglob\" stuff.\r\n      case '?':\r\n      case '*':\r\n      case '+':\r\n      case '@':\r\n      case '!':\r\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\r\n\r\n        // all of those are literals inside a class, except that\r\n        // the glob [!a] means [^a] in regexp\r\n        if (inClass) {\r\n          this.debug('  in class')\r\n          if (c === '!' && i === classStart + 1) c = '^'\r\n          re += c\r\n          continue\r\n        }\r\n\r\n        // if we already have a stateChar, then it means\r\n        // that there was something like ** or +? in there.\r\n        // Handle the stateChar, then proceed with this one.\r\n        self.debug('call clearStateChar %j', stateChar)\r\n        clearStateChar()\r\n        stateChar = c\r\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\r\n        // just clear the statechar *now*, rather than even diving into\r\n        // the patternList stuff.\r\n        if (options.noext) clearStateChar()\r\n      continue\r\n\r\n      case '(':\r\n        if (inClass) {\r\n          re += '('\r\n          continue\r\n        }\r\n\r\n        if (!stateChar) {\r\n          re += '\\\\('\r\n          continue\r\n        }\r\n\r\n        patternListStack.push({\r\n          type: stateChar,\r\n          start: i - 1,\r\n          reStart: re.length,\r\n          open: plTypes[stateChar].open,\r\n          close: plTypes[stateChar].close\r\n        })\r\n        // negation is (?:(?!js)[^/]*)\r\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\r\n        this.debug('plType %j %j', stateChar, re)\r\n        stateChar = false\r\n      continue\r\n\r\n      case ')':\r\n        if (inClass || !patternListStack.length) {\r\n          re += '\\\\)'\r\n          continue\r\n        }\r\n\r\n        clearStateChar()\r\n        hasMagic = true\r\n        var pl = patternListStack.pop()\r\n        // negation is (?:(?!js)[^/]*)\r\n        // The others are (?:<pattern>)<type>\r\n        re += pl.close\r\n        if (pl.type === '!') {\r\n          negativeLists.push(pl)\r\n        }\r\n        pl.reEnd = re.length\r\n      continue\r\n\r\n      case '|':\r\n        if (inClass || !patternListStack.length || escaping) {\r\n          re += '\\\\|'\r\n          escaping = false\r\n          continue\r\n        }\r\n\r\n        clearStateChar()\r\n        re += '|'\r\n      continue\r\n\r\n      // these are mostly the same in regexp and glob\r\n      case '[':\r\n        // swallow any state-tracking char before the [\r\n        clearStateChar()\r\n\r\n        if (inClass) {\r\n          re += '\\\\' + c\r\n          continue\r\n        }\r\n\r\n        inClass = true\r\n        classStart = i\r\n        reClassStart = re.length\r\n        re += c\r\n      continue\r\n\r\n      case ']':\r\n        //  a right bracket shall lose its special\r\n        //  meaning and represent itself in\r\n        //  a bracket expression if it occurs\r\n        //  first in the list.  -- POSIX.2 2.8.3.2\r\n        if (i === classStart + 1 || !inClass) {\r\n          re += '\\\\' + c\r\n          escaping = false\r\n          continue\r\n        }\r\n\r\n        // handle the case where we left a class open.\r\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\r\n        if (inClass) {\r\n          // split where the last [ was, make sure we don't have\r\n          // an invalid re. if so, re-walk the contents of the\r\n          // would-be class to re-translate any characters that\r\n          // were passed through as-is\r\n          // TODO: It would probably be faster to determine this\r\n          // without a try/catch and a new RegExp, but it's tricky\r\n          // to do safely.  For now, this is safe and works.\r\n          var cs = pattern.substring(classStart + 1, i)\r\n          try {\r\n            RegExp('[' + cs + ']')\r\n          } catch (er) {\r\n            // not a valid class!\r\n            var sp = this.parse(cs, SUBPARSE)\r\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\r\n            hasMagic = hasMagic || sp[1]\r\n            inClass = false\r\n            continue\r\n          }\r\n        }\r\n\r\n        // finish up the class.\r\n        hasMagic = true\r\n        inClass = false\r\n        re += c\r\n      continue\r\n\r\n      default:\r\n        // swallow any state char that wasn't consumed\r\n        clearStateChar()\r\n\r\n        if (escaping) {\r\n          // no need\r\n          escaping = false\r\n        } else if (reSpecials[c]\r\n          && !(c === '^' && inClass)) {\r\n          re += '\\\\'\r\n        }\r\n\r\n        re += c\r\n\r\n    } // switch\r\n  } // for\r\n\r\n  // handle the case where we left a class open.\r\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\r\n  if (inClass) {\r\n    // split where the last [ was, and escape it\r\n    // this is a huge pita.  We now have to re-walk\r\n    // the contents of the would-be class to re-translate\r\n    // any characters that were passed through as-is\r\n    cs = pattern.substr(classStart + 1)\r\n    sp = this.parse(cs, SUBPARSE)\r\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\r\n    hasMagic = hasMagic || sp[1]\r\n  }\r\n\r\n  // handle the case where we had a +( thing at the *end*\r\n  // of the pattern.\r\n  // each pattern list stack adds 3 chars, and we need to go through\r\n  // and escape any | chars that were passed through as-is for the regexp.\r\n  // Go through and escape them, taking care not to double-escape any\r\n  // | chars that were already escaped.\r\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\r\n    var tail = re.slice(pl.reStart + pl.open.length)\r\n    this.debug('setting tail', re, pl)\r\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\r\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\r\n      if (!$2) {\r\n        // the | isn't already escaped, so escape it.\r\n        $2 = '\\\\'\r\n      }\r\n\r\n      // need to escape all those slashes *again*, without escaping the\r\n      // one that we need for escaping the | character.  As it works out,\r\n      // escaping an even number of slashes can be done by simply repeating\r\n      // it exactly after itself.  That's why this trick works.\r\n      //\r\n      // I am sorry that you have to see this.\r\n      return $1 + $1 + $2 + '|'\r\n    })\r\n\r\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\r\n    var t = pl.type === '*' ? star\r\n      : pl.type === '?' ? qmark\r\n      : '\\\\' + pl.type\r\n\r\n    hasMagic = true\r\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\r\n  }\r\n\r\n  // handle trailing things that only matter at the very end.\r\n  clearStateChar()\r\n  if (escaping) {\r\n    // trailing \\\\\r\n    re += '\\\\\\\\'\r\n  }\r\n\r\n  // only need to apply the nodot start if the re starts with\r\n  // something that could conceivably capture a dot\r\n  var addPatternStart = false\r\n  switch (re.charAt(0)) {\r\n    case '.':\r\n    case '[':\r\n    case '(': addPatternStart = true\r\n  }\r\n\r\n  // Hack to work around lack of negative lookbehind in JS\r\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\r\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\r\n  // lookahead, has to look ALL the way ahead, to the end of\r\n  // the pattern.\r\n  for (var n = negativeLists.length - 1; n > -1; n--) {\r\n    var nl = negativeLists[n]\r\n\r\n    var nlBefore = re.slice(0, nl.reStart)\r\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\r\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\r\n    var nlAfter = re.slice(nl.reEnd)\r\n\r\n    nlLast += nlAfter\r\n\r\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\r\n    // mean that we should *not* include the ) in the bit that is considered\r\n    // \"after\" the negated section.\r\n    var openParensBefore = nlBefore.split('(').length - 1\r\n    var cleanAfter = nlAfter\r\n    for (i = 0; i < openParensBefore; i++) {\r\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\r\n    }\r\n    nlAfter = cleanAfter\r\n\r\n    var dollar = ''\r\n    if (nlAfter === '' && isSub !== SUBPARSE) {\r\n      dollar = '$'\r\n    }\r\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\r\n    re = newRe\r\n  }\r\n\r\n  // if the re is not \"\" at this point, then we need to make sure\r\n  // it doesn't match against an empty path part.\r\n  // Otherwise a/* will match a/, which it should not.\r\n  if (re !== '' && hasMagic) {\r\n    re = '(?=.)' + re\r\n  }\r\n\r\n  if (addPatternStart) {\r\n    re = patternStart + re\r\n  }\r\n\r\n  // parsing just a piece of a larger pattern.\r\n  if (isSub === SUBPARSE) {\r\n    return [re, hasMagic]\r\n  }\r\n\r\n  // skip the regexp for non-magical patterns\r\n  // unescape anything in it, though, so that it'll be\r\n  // an exact match against a file etc.\r\n  if (!hasMagic) {\r\n    return globUnescape(pattern)\r\n  }\r\n\r\n  var flags = options.nocase ? 'i' : ''\r\n  try {\r\n    var regExp = new RegExp('^' + re + '$', flags)\r\n  } catch (er) {\r\n    // If it was an invalid regular expression, then it can't match\r\n    // anything.  This trick looks for a character after the end of\r\n    // the string, which is of course impossible, except in multi-line\r\n    // mode, but it's not a /m regex.\r\n    return new RegExp('$.')\r\n  }\r\n\r\n  regExp._glob = pattern\r\n  regExp._src = re\r\n\r\n  return regExp\r\n}\r\n\r\nminimatch.makeRe = function (pattern, options) {\r\n  return new Minimatch(pattern, options || {}).makeRe()\r\n}\r\n\r\nMinimatch.prototype.makeRe = makeRe\r\nfunction makeRe () {\r\n  if (this.regexp || this.regexp === false) return this.regexp\r\n\r\n  // at this point, this.set is a 2d array of partial\r\n  // pattern strings, or \"**\".\r\n  //\r\n  // It's better to use .match().  This function shouldn't\r\n  // be used, really, but it's pretty convenient sometimes,\r\n  // when you just want to work with a regex.\r\n  var set = this.set\r\n\r\n  if (!set.length) {\r\n    this.regexp = false\r\n    return this.regexp\r\n  }\r\n  var options = this.options\r\n\r\n  var twoStar = options.noglobstar ? star\r\n    : options.dot ? twoStarDot\r\n    : twoStarNoDot\r\n  var flags = options.nocase ? 'i' : ''\r\n\r\n  var re = set.map(function (pattern) {\r\n    return pattern.map(function (p) {\r\n      return (p === GLOBSTAR) ? twoStar\r\n      : (typeof p === 'string') ? regExpEscape(p)\r\n      : p._src\r\n    }).join('\\\\\\/')\r\n  }).join('|')\r\n\r\n  // must match entire pattern\r\n  // ending in a * or ** will make it less strict.\r\n  re = '^(?:' + re + ')$'\r\n\r\n  // can match anything, as long as it's not this.\r\n  if (this.negate) re = '^(?!' + re + ').*$'\r\n\r\n  try {\r\n    this.regexp = new RegExp(re, flags)\r\n  } catch (ex) {\r\n    this.regexp = false\r\n  }\r\n  return this.regexp\r\n}\r\n\r\nminimatch.match = function (list, pattern, options) {\r\n  options = options || {}\r\n  var mm = new Minimatch(pattern, options)\r\n  list = list.filter(function (f) {\r\n    return mm.match(f)\r\n  })\r\n  if (mm.options.nonull && !list.length) {\r\n    list.push(pattern)\r\n  }\r\n  return list\r\n}\r\n\r\nMinimatch.prototype.match = match\r\nfunction match (f, partial) {\r\n  this.debug('match', f, this.pattern)\r\n  // short-circuit in the case of busted things.\r\n  // comments, etc.\r\n  if (this.comment) return false\r\n  if (this.empty) return f === ''\r\n\r\n  if (f === '/' && partial) return true\r\n\r\n  var options = this.options\r\n\r\n  // windows: need to use /, not \\\r\n  if (path.sep !== '/') {\r\n    f = f.split(path.sep).join('/')\r\n  }\r\n\r\n  // treat the test path as a set of pathparts.\r\n  f = f.split(slashSplit)\r\n  this.debug(this.pattern, 'split', f)\r\n\r\n  // just ONE of the pattern sets in this.set needs to match\r\n  // in order for it to be valid.  If negating, then just one\r\n  // match means that we have failed.\r\n  // Either way, return on the first hit.\r\n\r\n  var set = this.set\r\n  this.debug(this.pattern, 'set', set)\r\n\r\n  // Find the basename of the path by looking for the last non-empty segment\r\n  var filename\r\n  var i\r\n  for (i = f.length - 1; i >= 0; i--) {\r\n    filename = f[i]\r\n    if (filename) break\r\n  }\r\n\r\n  for (i = 0; i < set.length; i++) {\r\n    var pattern = set[i]\r\n    var file = f\r\n    if (options.matchBase && pattern.length === 1) {\r\n      file = [filename]\r\n    }\r\n    var hit = this.matchOne(file, pattern, partial)\r\n    if (hit) {\r\n      if (options.flipNegate) return true\r\n      return !this.negate\r\n    }\r\n  }\r\n\r\n  // didn't get any hits.  this is success if it's a negative\r\n  // pattern, failure otherwise.\r\n  if (options.flipNegate) return false\r\n  return this.negate\r\n}\r\n\r\n// set partial to true to test if, for example,\r\n// \"/a/b\" matches the start of \"/*/b/*/d\"\r\n// Partial means, if you run out of file before you run\r\n// out of pattern, then that's fine, as long as all\r\n// the parts match.\r\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\r\n  var options = this.options\r\n\r\n  this.debug('matchOne',\r\n    { 'this': this, file: file, pattern: pattern })\r\n\r\n  this.debug('matchOne', file.length, pattern.length)\r\n\r\n  for (var fi = 0,\r\n      pi = 0,\r\n      fl = file.length,\r\n      pl = pattern.length\r\n      ; (fi < fl) && (pi < pl)\r\n      ; fi++, pi++) {\r\n    this.debug('matchOne loop')\r\n    var p = pattern[pi]\r\n    var f = file[fi]\r\n\r\n    this.debug(pattern, p, f)\r\n\r\n    // should be impossible.\r\n    // some invalid regexp stuff in the set.\r\n    if (p === false) return false\r\n\r\n    if (p === GLOBSTAR) {\r\n      this.debug('GLOBSTAR', [pattern, p, f])\r\n\r\n      // \"**\"\r\n      // a/**/b/**/c would match the following:\r\n      // a/b/x/y/z/c\r\n      // a/x/y/z/b/c\r\n      // a/b/x/b/x/c\r\n      // a/b/c\r\n      // To do this, take the rest of the pattern after\r\n      // the **, and see if it would match the file remainder.\r\n      // If so, return success.\r\n      // If not, the ** \"swallows\" a segment, and try again.\r\n      // This is recursively awful.\r\n      //\r\n      // a/**/b/**/c matching a/b/x/y/z/c\r\n      // - a matches a\r\n      // - doublestar\r\n      //   - matchOne(b/x/y/z/c, b/**/c)\r\n      //     - b matches b\r\n      //     - doublestar\r\n      //       - matchOne(x/y/z/c, c) -> no\r\n      //       - matchOne(y/z/c, c) -> no\r\n      //       - matchOne(z/c, c) -> no\r\n      //       - matchOne(c, c) yes, hit\r\n      var fr = fi\r\n      var pr = pi + 1\r\n      if (pr === pl) {\r\n        this.debug('** at the end')\r\n        // a ** at the end will just swallow the rest.\r\n        // We have found a match.\r\n        // however, it will not swallow /.x, unless\r\n        // options.dot is set.\r\n        // . and .. are *never* matched by **, for explosively\r\n        // exponential reasons.\r\n        for (; fi < fl; fi++) {\r\n          if (file[fi] === '.' || file[fi] === '..' ||\r\n            (!options.dot && file[fi].charAt(0) === '.')) return false\r\n        }\r\n        return true\r\n      }\r\n\r\n      // ok, let's see if we can swallow whatever we can.\r\n      while (fr < fl) {\r\n        var swallowee = file[fr]\r\n\r\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\r\n\r\n        // XXX remove this slice.  Just pass the start index.\r\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\r\n          this.debug('globstar found match!', fr, fl, swallowee)\r\n          // found a match.\r\n          return true\r\n        } else {\r\n          // can't swallow \".\" or \"..\" ever.\r\n          // can only swallow \".foo\" when explicitly asked.\r\n          if (swallowee === '.' || swallowee === '..' ||\r\n            (!options.dot && swallowee.charAt(0) === '.')) {\r\n            this.debug('dot detected!', file, fr, pattern, pr)\r\n            break\r\n          }\r\n\r\n          // ** swallows a segment, and continue.\r\n          this.debug('globstar swallow a segment, and continue')\r\n          fr++\r\n        }\r\n      }\r\n\r\n      // no match was found.\r\n      // However, in partial mode, we can't say this is necessarily over.\r\n      // If there's more *pattern* left, then\r\n      if (partial) {\r\n        // ran out of file\r\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\r\n        if (fr === fl) return true\r\n      }\r\n      return false\r\n    }\r\n\r\n    // something other than **\r\n    // non-magic patterns just have to match exactly\r\n    // patterns with magic have been turned into regexps.\r\n    var hit\r\n    if (typeof p === 'string') {\r\n      if (options.nocase) {\r\n        hit = f.toLowerCase() === p.toLowerCase()\r\n      } else {\r\n        hit = f === p\r\n      }\r\n      this.debug('string match', p, f, hit)\r\n    } else {\r\n      hit = f.match(p)\r\n      this.debug('pattern match', p, f, hit)\r\n    }\r\n\r\n    if (!hit) return false\r\n  }\r\n\r\n  // Note: ending in / means that we'll get a final \"\"\r\n  // at the end of the pattern.  This can only match a\r\n  // corresponding \"\" at the end of the file.\r\n  // If the file ends in /, then it can only match a\r\n  // a pattern that ends in /, unless the pattern just\r\n  // doesn't have any more for it. But, a/b/ should *not*\r\n  // match \"a/b/*\", even though \"\" matches against the\r\n  // [^/]*? pattern, except in partial mode, where it might\r\n  // simply not be reached yet.\r\n  // However, a/b/ should still satisfy a/*\r\n\r\n  // now either we fell off the end of the pattern, or we're done.\r\n  if (fi === fl && pi === pl) {\r\n    // ran out of pattern and filename at the same time.\r\n    // an exact hit!\r\n    return true\r\n  } else if (fi === fl) {\r\n    // ran out of file, but still had pattern left.\r\n    // this is ok if we're doing the match as part of\r\n    // a glob fs traversal.\r\n    return partial\r\n  } else if (pi === pl) {\r\n    // ran out of pattern, still have file left.\r\n    // this is only acceptable if we're on the very last\r\n    // empty segment of a file with a trailing slash.\r\n    // a/* should match a/b/\r\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\r\n    return emptyFileEnd\r\n  }\r\n\r\n  // should be unreachable.\r\n  throw new Error('wtf?')\r\n}\r\n\r\n// replace stuff like \\* with *\r\nfunction globUnescape (s) {\r\n  return s.replace(/\\\\(.)/g, '$1')\r\n}\r\n\r\nfunction regExpEscape (s) {\r\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\r\n}\r\n","var wrappy = require('wrappy')\r\nmodule.exports = wrappy(once)\r\nmodule.exports.strict = wrappy(onceStrict)\r\n\r\nonce.proto = once(function () {\r\n  Object.defineProperty(Function.prototype, 'once', {\r\n    value: function () {\r\n      return once(this)\r\n    },\r\n    configurable: true\r\n  })\r\n\r\n  Object.defineProperty(Function.prototype, 'onceStrict', {\r\n    value: function () {\r\n      return onceStrict(this)\r\n    },\r\n    configurable: true\r\n  })\r\n})\r\n\r\nfunction once (fn) {\r\n  var f = function () {\r\n    if (f.called) return f.value\r\n    f.called = true\r\n    return f.value = fn.apply(this, arguments)\r\n  }\r\n  f.called = false\r\n  return f\r\n}\r\n\r\nfunction onceStrict (fn) {\r\n  var f = function () {\r\n    if (f.called)\r\n      throw new Error(f.onceError)\r\n    f.called = true\r\n    return f.value = fn.apply(this, arguments)\r\n  }\r\n  var name = fn.name || 'Function wrapped with `once`'\r\n  f.onceError = name + \" shouldn't be called more than once\"\r\n  f.called = false\r\n  return f\r\n}\r\n","'use strict';\r\n\r\nfunction posix(path) {\r\n\treturn path.charAt(0) === '/';\r\n}\r\n\r\nfunction win32(path) {\r\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\r\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\r\n\tvar result = splitDeviceRe.exec(path);\r\n\tvar device = result[1] || '';\r\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\r\n\r\n\t// UNC paths are always absolute\r\n\treturn Boolean(result[2] || isUnc);\r\n}\r\n\r\nmodule.exports = process.platform === 'win32' ? win32 : posix;\r\nmodule.exports.posix = posix;\r\nmodule.exports.win32 = win32;\r\n","module.exports = rimraf\r\nrimraf.sync = rimrafSync\r\n\r\nvar assert = require(\"assert\")\r\nvar path = require(\"path\")\r\nvar fs = require(\"fs\")\r\nvar glob = require(\"glob\")\r\nvar _0666 = parseInt('666', 8)\r\n\r\nvar defaultGlobOpts = {\r\n  nosort: true,\r\n  silent: true\r\n}\r\n\r\n// for EMFILE handling\r\nvar timeout = 0\r\n\r\nvar isWindows = (process.platform === \"win32\")\r\n\r\nfunction defaults (options) {\r\n  var methods = [\r\n    'unlink',\r\n    'chmod',\r\n    'stat',\r\n    'lstat',\r\n    'rmdir',\r\n    'readdir'\r\n  ]\r\n  methods.forEach(function(m) {\r\n    options[m] = options[m] || fs[m]\r\n    m = m + 'Sync'\r\n    options[m] = options[m] || fs[m]\r\n  })\r\n\r\n  options.maxBusyTries = options.maxBusyTries || 3\r\n  options.emfileWait = options.emfileWait || 1000\r\n  if (options.glob === false) {\r\n    options.disableGlob = true\r\n  }\r\n  options.disableGlob = options.disableGlob || false\r\n  options.glob = options.glob || defaultGlobOpts\r\n}\r\n\r\nfunction rimraf (p, options, cb) {\r\n  if (typeof options === 'function') {\r\n    cb = options\r\n    options = {}\r\n  }\r\n\r\n  assert(p, 'rimraf: missing path')\r\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string')\r\n  assert.equal(typeof cb, 'function', 'rimraf: callback function required')\r\n  assert(options, 'rimraf: invalid options argument provided')\r\n  assert.equal(typeof options, 'object', 'rimraf: options should be object')\r\n\r\n  defaults(options)\r\n\r\n  var busyTries = 0\r\n  var errState = null\r\n  var n = 0\r\n\r\n  if (options.disableGlob || !glob.hasMagic(p))\r\n    return afterGlob(null, [p])\r\n\r\n  options.lstat(p, function (er, stat) {\r\n    if (!er)\r\n      return afterGlob(null, [p])\r\n\r\n    glob(p, options.glob, afterGlob)\r\n  })\r\n\r\n  function next (er) {\r\n    errState = errState || er\r\n    if (--n === 0)\r\n      cb(errState)\r\n  }\r\n\r\n  function afterGlob (er, results) {\r\n    if (er)\r\n      return cb(er)\r\n\r\n    n = results.length\r\n    if (n === 0)\r\n      return cb()\r\n\r\n    results.forEach(function (p) {\r\n      rimraf_(p, options, function CB (er) {\r\n        if (er) {\r\n          if ((er.code === \"EBUSY\" || er.code === \"ENOTEMPTY\" || er.code === \"EPERM\") &&\r\n              busyTries < options.maxBusyTries) {\r\n            busyTries ++\r\n            var time = busyTries * 100\r\n            // try again, with the same exact callback as this one.\r\n            return setTimeout(function () {\r\n              rimraf_(p, options, CB)\r\n            }, time)\r\n          }\r\n\r\n          // this one won't happen if graceful-fs is used.\r\n          if (er.code === \"EMFILE\" && timeout < options.emfileWait) {\r\n            return setTimeout(function () {\r\n              rimraf_(p, options, CB)\r\n            }, timeout ++)\r\n          }\r\n\r\n          // already gone\r\n          if (er.code === \"ENOENT\") er = null\r\n        }\r\n\r\n        timeout = 0\r\n        next(er)\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// Two possible strategies.\r\n// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR\r\n// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR\r\n//\r\n// Both result in an extra syscall when you guess wrong.  However, there\r\n// are likely far more normal files in the world than directories.  This\r\n// is based on the assumption that a the average number of files per\r\n// directory is >= 1.\r\n//\r\n// If anyone ever complains about this, then I guess the strategy could\r\n// be made configurable somehow.  But until then, YAGNI.\r\nfunction rimraf_ (p, options, cb) {\r\n  assert(p)\r\n  assert(options)\r\n  assert(typeof cb === 'function')\r\n\r\n  // sunos lets the root user unlink directories, which is... weird.\r\n  // so we have to lstat here and make sure it's not a dir.\r\n  options.lstat(p, function (er, st) {\r\n    if (er && er.code === \"ENOENT\")\r\n      return cb(null)\r\n\r\n    // Windows can EPERM on stat.  Life is suffering.\r\n    if (er && er.code === \"EPERM\" && isWindows)\r\n      fixWinEPERM(p, options, er, cb)\r\n\r\n    if (st && st.isDirectory())\r\n      return rmdir(p, options, er, cb)\r\n\r\n    options.unlink(p, function (er) {\r\n      if (er) {\r\n        if (er.code === \"ENOENT\")\r\n          return cb(null)\r\n        if (er.code === \"EPERM\")\r\n          return (isWindows)\r\n            ? fixWinEPERM(p, options, er, cb)\r\n            : rmdir(p, options, er, cb)\r\n        if (er.code === \"EISDIR\")\r\n          return rmdir(p, options, er, cb)\r\n      }\r\n      return cb(er)\r\n    })\r\n  })\r\n}\r\n\r\nfunction fixWinEPERM (p, options, er, cb) {\r\n  assert(p)\r\n  assert(options)\r\n  assert(typeof cb === 'function')\r\n  if (er)\r\n    assert(er instanceof Error)\r\n\r\n  options.chmod(p, _0666, function (er2) {\r\n    if (er2)\r\n      cb(er2.code === \"ENOENT\" ? null : er)\r\n    else\r\n      options.stat(p, function(er3, stats) {\r\n        if (er3)\r\n          cb(er3.code === \"ENOENT\" ? null : er)\r\n        else if (stats.isDirectory())\r\n          rmdir(p, options, er, cb)\r\n        else\r\n          options.unlink(p, cb)\r\n      })\r\n  })\r\n}\r\n\r\nfunction fixWinEPERMSync (p, options, er) {\r\n  assert(p)\r\n  assert(options)\r\n  if (er)\r\n    assert(er instanceof Error)\r\n\r\n  try {\r\n    options.chmodSync(p, _0666)\r\n  } catch (er2) {\r\n    if (er2.code === \"ENOENT\")\r\n      return\r\n    else\r\n      throw er\r\n  }\r\n\r\n  try {\r\n    var stats = options.statSync(p)\r\n  } catch (er3) {\r\n    if (er3.code === \"ENOENT\")\r\n      return\r\n    else\r\n      throw er\r\n  }\r\n\r\n  if (stats.isDirectory())\r\n    rmdirSync(p, options, er)\r\n  else\r\n    options.unlinkSync(p)\r\n}\r\n\r\nfunction rmdir (p, options, originalEr, cb) {\r\n  assert(p)\r\n  assert(options)\r\n  if (originalEr)\r\n    assert(originalEr instanceof Error)\r\n  assert(typeof cb === 'function')\r\n\r\n  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)\r\n  // if we guessed wrong, and it's not a directory, then\r\n  // raise the original error.\r\n  options.rmdir(p, function (er) {\r\n    if (er && (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\"))\r\n      rmkids(p, options, cb)\r\n    else if (er && er.code === \"ENOTDIR\")\r\n      cb(originalEr)\r\n    else\r\n      cb(er)\r\n  })\r\n}\r\n\r\nfunction rmkids(p, options, cb) {\r\n  assert(p)\r\n  assert(options)\r\n  assert(typeof cb === 'function')\r\n\r\n  options.readdir(p, function (er, files) {\r\n    if (er)\r\n      return cb(er)\r\n    var n = files.length\r\n    if (n === 0)\r\n      return options.rmdir(p, cb)\r\n    var errState\r\n    files.forEach(function (f) {\r\n      rimraf(path.join(p, f), options, function (er) {\r\n        if (errState)\r\n          return\r\n        if (er)\r\n          return cb(errState = er)\r\n        if (--n === 0)\r\n          options.rmdir(p, cb)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n// this looks simpler, and is strictly *faster*, but will\r\n// tie up the JavaScript thread and fail on excessively\r\n// deep directory trees.\r\nfunction rimrafSync (p, options) {\r\n  options = options || {}\r\n  defaults(options)\r\n\r\n  assert(p, 'rimraf: missing path')\r\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string')\r\n  assert(options, 'rimraf: missing options')\r\n  assert.equal(typeof options, 'object', 'rimraf: options should be object')\r\n\r\n  var results\r\n\r\n  if (options.disableGlob || !glob.hasMagic(p)) {\r\n    results = [p]\r\n  } else {\r\n    try {\r\n      options.lstatSync(p)\r\n      results = [p]\r\n    } catch (er) {\r\n      results = glob.sync(p, options.glob)\r\n    }\r\n  }\r\n\r\n  if (!results.length)\r\n    return\r\n\r\n  for (var i = 0; i < results.length; i++) {\r\n    var p = results[i]\r\n\r\n    try {\r\n      var st = options.lstatSync(p)\r\n    } catch (er) {\r\n      if (er.code === \"ENOENT\")\r\n        return\r\n\r\n      // Windows can EPERM on stat.  Life is suffering.\r\n      if (er.code === \"EPERM\" && isWindows)\r\n        fixWinEPERMSync(p, options, er)\r\n    }\r\n\r\n    try {\r\n      // sunos lets the root user unlink directories, which is... weird.\r\n      if (st && st.isDirectory())\r\n        rmdirSync(p, options, null)\r\n      else\r\n        options.unlinkSync(p)\r\n    } catch (er) {\r\n      if (er.code === \"ENOENT\")\r\n        return\r\n      if (er.code === \"EPERM\")\r\n        return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)\r\n      if (er.code !== \"EISDIR\")\r\n        throw er\r\n\r\n      rmdirSync(p, options, er)\r\n    }\r\n  }\r\n}\r\n\r\nfunction rmdirSync (p, options, originalEr) {\r\n  assert(p)\r\n  assert(options)\r\n  if (originalEr)\r\n    assert(originalEr instanceof Error)\r\n\r\n  try {\r\n    options.rmdirSync(p)\r\n  } catch (er) {\r\n    if (er.code === \"ENOENT\")\r\n      return\r\n    if (er.code === \"ENOTDIR\")\r\n      throw originalEr\r\n    if (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\")\r\n      rmkidsSync(p, options)\r\n  }\r\n}\r\n\r\nfunction rmkidsSync (p, options) {\r\n  assert(p)\r\n  assert(options)\r\n  options.readdirSync(p).forEach(function (f) {\r\n    rimrafSync(path.join(p, f), options)\r\n  })\r\n\r\n  // We only end up here once we got ENOTEMPTY at least once, and\r\n  // at this point, we are guaranteed to have removed all the kids.\r\n  // So, we know that it won't be ENOENT or ENOTDIR or anything else.\r\n  // try really hard to delete stuff on windows, because it has a\r\n  // PROFOUNDLY annoying habit of not closing handles promptly when\r\n  // files are deleted, resulting in spurious ENOTEMPTY errors.\r\n  var retries = isWindows ? 100 : 1\r\n  var i = 0\r\n  do {\r\n    var threw = true\r\n    try {\r\n      var ret = options.rmdirSync(p, options)\r\n      threw = false\r\n      return ret\r\n    } finally {\r\n      if (++i < retries && threw)\r\n        continue\r\n    }\r\n  } while (true)\r\n}\r\n","exports = module.exports = SemVer\r\n\r\nvar debug\r\n/* istanbul ignore next */\r\nif (typeof process === 'object' &&\r\n    process.env &&\r\n    process.env.NODE_DEBUG &&\r\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\r\n  debug = function () {\r\n    var args = Array.prototype.slice.call(arguments, 0)\r\n    args.unshift('SEMVER')\r\n    console.log.apply(console, args)\r\n  }\r\n} else {\r\n  debug = function () {}\r\n}\r\n\r\n// Note: this is the semver.org version of the spec that it implements\r\n// Not necessarily the package version of this code.\r\nexports.SEMVER_SPEC_VERSION = '2.0.0'\r\n\r\nvar MAX_LENGTH = 256\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\r\n  /* istanbul ignore next */ 9007199254740991\r\n\r\n// Max safe segment length for coercion.\r\nvar MAX_SAFE_COMPONENT_LENGTH = 16\r\n\r\n// The actual regexps go on exports.re\r\nvar re = exports.re = []\r\nvar src = exports.src = []\r\nvar R = 0\r\n\r\n// The following Regular Expressions can be used for tokenizing,\r\n// validating, and parsing SemVer version strings.\r\n\r\n// ## Numeric Identifier\r\n// A single `0`, or a non-zero digit followed by zero or more digits.\r\n\r\nvar NUMERICIDENTIFIER = R++\r\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\r\nvar NUMERICIDENTIFIERLOOSE = R++\r\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+'\r\n\r\n// ## Non-numeric Identifier\r\n// Zero or more digits, followed by a letter or hyphen, and then zero or\r\n// more letters, digits, or hyphens.\r\n\r\nvar NONNUMERICIDENTIFIER = R++\r\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\r\n\r\n// ## Main Version\r\n// Three dot-separated numeric identifiers.\r\n\r\nvar MAINVERSION = R++\r\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\r\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\r\n                   '(' + src[NUMERICIDENTIFIER] + ')'\r\n\r\nvar MAINVERSIONLOOSE = R++\r\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\r\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\r\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')'\r\n\r\n// ## Pre-release Version Identifier\r\n// A numeric identifier, or a non-numeric identifier.\r\n\r\nvar PRERELEASEIDENTIFIER = R++\r\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\r\n                            '|' + src[NONNUMERICIDENTIFIER] + ')'\r\n\r\nvar PRERELEASEIDENTIFIERLOOSE = R++\r\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\r\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')'\r\n\r\n// ## Pre-release Version\r\n// Hyphen, followed by one or more dot-separated pre-release version\r\n// identifiers.\r\n\r\nvar PRERELEASE = R++\r\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\r\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))'\r\n\r\nvar PRERELEASELOOSE = R++\r\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\r\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'\r\n\r\n// ## Build Metadata Identifier\r\n// Any combination of digits, letters, or hyphens.\r\n\r\nvar BUILDIDENTIFIER = R++\r\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\r\n\r\n// ## Build Metadata\r\n// Plus sign, followed by one or more period-separated build metadata\r\n// identifiers.\r\n\r\nvar BUILD = R++\r\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\r\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'\r\n\r\n// ## Full Version String\r\n// A main version, followed optionally by a pre-release version and\r\n// build metadata.\r\n\r\n// Note that the only major, minor, patch, and pre-release sections of\r\n// the version string are capturing groups.  The build metadata is not a\r\n// capturing group, because it should not ever be used in version\r\n// comparison.\r\n\r\nvar FULL = R++\r\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\r\n                src[PRERELEASE] + '?' +\r\n                src[BUILD] + '?'\r\n\r\nsrc[FULL] = '^' + FULLPLAIN + '$'\r\n\r\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\r\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\r\n// common in the npm registry.\r\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\r\n                 src[PRERELEASELOOSE] + '?' +\r\n                 src[BUILD] + '?'\r\n\r\nvar LOOSE = R++\r\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$'\r\n\r\nvar GTLT = R++\r\nsrc[GTLT] = '((?:<|>)?=?)'\r\n\r\n// Something like \"2.*\" or \"1.2.x\".\r\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\r\n// Only the first item is strictly required.\r\nvar XRANGEIDENTIFIERLOOSE = R++\r\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\r\nvar XRANGEIDENTIFIER = R++\r\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*'\r\n\r\nvar XRANGEPLAIN = R++\r\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\r\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\r\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\r\n                   '(?:' + src[PRERELEASE] + ')?' +\r\n                   src[BUILD] + '?' +\r\n                   ')?)?'\r\n\r\nvar XRANGEPLAINLOOSE = R++\r\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\r\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\r\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\r\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\r\n                        src[BUILD] + '?' +\r\n                        ')?)?'\r\n\r\nvar XRANGE = R++\r\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$'\r\nvar XRANGELOOSE = R++\r\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'\r\n\r\n// Coercion.\r\n// Extract anything that could conceivably be a part of a valid semver\r\nvar COERCE = R++\r\nsrc[COERCE] = '(?:^|[^\\\\d])' +\r\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\r\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\r\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\r\n              '(?:$|[^\\\\d])'\r\n\r\n// Tilde ranges.\r\n// Meaning is \"reasonably at or greater than\"\r\nvar LONETILDE = R++\r\nsrc[LONETILDE] = '(?:~>?)'\r\n\r\nvar TILDETRIM = R++\r\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+'\r\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g')\r\nvar tildeTrimReplace = '$1~'\r\n\r\nvar TILDE = R++\r\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'\r\nvar TILDELOOSE = R++\r\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'\r\n\r\n// Caret ranges.\r\n// Meaning is \"at least and backwards compatible with\"\r\nvar LONECARET = R++\r\nsrc[LONECARET] = '(?:\\\\^)'\r\n\r\nvar CARETTRIM = R++\r\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+'\r\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g')\r\nvar caretTrimReplace = '$1^'\r\n\r\nvar CARET = R++\r\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'\r\nvar CARETLOOSE = R++\r\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'\r\n\r\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\r\nvar COMPARATORLOOSE = R++\r\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$'\r\nvar COMPARATOR = R++\r\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'\r\n\r\n// An expression to strip any whitespace between the gtlt and the thing\r\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\r\nvar COMPARATORTRIM = R++\r\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\r\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'\r\n\r\n// this one has to use the /g flag\r\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g')\r\nvar comparatorTrimReplace = '$1$2$3'\r\n\r\n// Something like `1.2.3 - 1.2.4`\r\n// Note that these all use the loose form, because they'll be\r\n// checked against either the strict or loose comparator form\r\n// later.\r\nvar HYPHENRANGE = R++\r\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\r\n                   '\\\\s+-\\\\s+' +\r\n                   '(' + src[XRANGEPLAIN] + ')' +\r\n                   '\\\\s*$'\r\n\r\nvar HYPHENRANGELOOSE = R++\r\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\r\n                        '\\\\s+-\\\\s+' +\r\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\r\n                        '\\\\s*$'\r\n\r\n// Star ranges basically just allow anything at all.\r\nvar STAR = R++\r\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*'\r\n\r\n// Compile to actual regexp objects.\r\n// All are flag-free, unless they were created above with a flag.\r\nfor (var i = 0; i < R; i++) {\r\n  debug(i, src[i])\r\n  if (!re[i]) {\r\n    re[i] = new RegExp(src[i])\r\n  }\r\n}\r\n\r\nexports.parse = parse\r\nfunction parse (version, options) {\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n\r\n  if (version instanceof SemVer) {\r\n    return version\r\n  }\r\n\r\n  if (typeof version !== 'string') {\r\n    return null\r\n  }\r\n\r\n  if (version.length > MAX_LENGTH) {\r\n    return null\r\n  }\r\n\r\n  var r = options.loose ? re[LOOSE] : re[FULL]\r\n  if (!r.test(version)) {\r\n    return null\r\n  }\r\n\r\n  try {\r\n    return new SemVer(version, options)\r\n  } catch (er) {\r\n    return null\r\n  }\r\n}\r\n\r\nexports.valid = valid\r\nfunction valid (version, options) {\r\n  var v = parse(version, options)\r\n  return v ? v.version : null\r\n}\r\n\r\nexports.clean = clean\r\nfunction clean (version, options) {\r\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\r\n  return s ? s.version : null\r\n}\r\n\r\nexports.SemVer = SemVer\r\n\r\nfunction SemVer (version, options) {\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n  if (version instanceof SemVer) {\r\n    if (version.loose === options.loose) {\r\n      return version\r\n    } else {\r\n      version = version.version\r\n    }\r\n  } else if (typeof version !== 'string') {\r\n    throw new TypeError('Invalid Version: ' + version)\r\n  }\r\n\r\n  if (version.length > MAX_LENGTH) {\r\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\r\n  }\r\n\r\n  if (!(this instanceof SemVer)) {\r\n    return new SemVer(version, options)\r\n  }\r\n\r\n  debug('SemVer', version, options)\r\n  this.options = options\r\n  this.loose = !!options.loose\r\n\r\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL])\r\n\r\n  if (!m) {\r\n    throw new TypeError('Invalid Version: ' + version)\r\n  }\r\n\r\n  this.raw = version\r\n\r\n  // these are actually numbers\r\n  this.major = +m[1]\r\n  this.minor = +m[2]\r\n  this.patch = +m[3]\r\n\r\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\r\n    throw new TypeError('Invalid major version')\r\n  }\r\n\r\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\r\n    throw new TypeError('Invalid minor version')\r\n  }\r\n\r\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\r\n    throw new TypeError('Invalid patch version')\r\n  }\r\n\r\n  // numberify any prerelease numeric ids\r\n  if (!m[4]) {\r\n    this.prerelease = []\r\n  } else {\r\n    this.prerelease = m[4].split('.').map(function (id) {\r\n      if (/^[0-9]+$/.test(id)) {\r\n        var num = +id\r\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\r\n          return num\r\n        }\r\n      }\r\n      return id\r\n    })\r\n  }\r\n\r\n  this.build = m[5] ? m[5].split('.') : []\r\n  this.format()\r\n}\r\n\r\nSemVer.prototype.format = function () {\r\n  this.version = this.major + '.' + this.minor + '.' + this.patch\r\n  if (this.prerelease.length) {\r\n    this.version += '-' + this.prerelease.join('.')\r\n  }\r\n  return this.version\r\n}\r\n\r\nSemVer.prototype.toString = function () {\r\n  return this.version\r\n}\r\n\r\nSemVer.prototype.compare = function (other) {\r\n  debug('SemVer.compare', this.version, this.options, other)\r\n  if (!(other instanceof SemVer)) {\r\n    other = new SemVer(other, this.options)\r\n  }\r\n\r\n  return this.compareMain(other) || this.comparePre(other)\r\n}\r\n\r\nSemVer.prototype.compareMain = function (other) {\r\n  if (!(other instanceof SemVer)) {\r\n    other = new SemVer(other, this.options)\r\n  }\r\n\r\n  return compareIdentifiers(this.major, other.major) ||\r\n         compareIdentifiers(this.minor, other.minor) ||\r\n         compareIdentifiers(this.patch, other.patch)\r\n}\r\n\r\nSemVer.prototype.comparePre = function (other) {\r\n  if (!(other instanceof SemVer)) {\r\n    other = new SemVer(other, this.options)\r\n  }\r\n\r\n  // NOT having a prerelease is > having one\r\n  if (this.prerelease.length && !other.prerelease.length) {\r\n    return -1\r\n  } else if (!this.prerelease.length && other.prerelease.length) {\r\n    return 1\r\n  } else if (!this.prerelease.length && !other.prerelease.length) {\r\n    return 0\r\n  }\r\n\r\n  var i = 0\r\n  do {\r\n    var a = this.prerelease[i]\r\n    var b = other.prerelease[i]\r\n    debug('prerelease compare', i, a, b)\r\n    if (a === undefined && b === undefined) {\r\n      return 0\r\n    } else if (b === undefined) {\r\n      return 1\r\n    } else if (a === undefined) {\r\n      return -1\r\n    } else if (a === b) {\r\n      continue\r\n    } else {\r\n      return compareIdentifiers(a, b)\r\n    }\r\n  } while (++i)\r\n}\r\n\r\n// preminor will bump the version up to the next minor release, and immediately\r\n// down to pre-release. premajor and prepatch work the same way.\r\nSemVer.prototype.inc = function (release, identifier) {\r\n  switch (release) {\r\n    case 'premajor':\r\n      this.prerelease.length = 0\r\n      this.patch = 0\r\n      this.minor = 0\r\n      this.major++\r\n      this.inc('pre', identifier)\r\n      break\r\n    case 'preminor':\r\n      this.prerelease.length = 0\r\n      this.patch = 0\r\n      this.minor++\r\n      this.inc('pre', identifier)\r\n      break\r\n    case 'prepatch':\r\n      // If this is already a prerelease, it will bump to the next version\r\n      // drop any prereleases that might already exist, since they are not\r\n      // relevant at this point.\r\n      this.prerelease.length = 0\r\n      this.inc('patch', identifier)\r\n      this.inc('pre', identifier)\r\n      break\r\n    // If the input is a non-prerelease version, this acts the same as\r\n    // prepatch.\r\n    case 'prerelease':\r\n      if (this.prerelease.length === 0) {\r\n        this.inc('patch', identifier)\r\n      }\r\n      this.inc('pre', identifier)\r\n      break\r\n\r\n    case 'major':\r\n      // If this is a pre-major version, bump up to the same major version.\r\n      // Otherwise increment major.\r\n      // 1.0.0-5 bumps to 1.0.0\r\n      // 1.1.0 bumps to 2.0.0\r\n      if (this.minor !== 0 ||\r\n          this.patch !== 0 ||\r\n          this.prerelease.length === 0) {\r\n        this.major++\r\n      }\r\n      this.minor = 0\r\n      this.patch = 0\r\n      this.prerelease = []\r\n      break\r\n    case 'minor':\r\n      // If this is a pre-minor version, bump up to the same minor version.\r\n      // Otherwise increment minor.\r\n      // 1.2.0-5 bumps to 1.2.0\r\n      // 1.2.1 bumps to 1.3.0\r\n      if (this.patch !== 0 || this.prerelease.length === 0) {\r\n        this.minor++\r\n      }\r\n      this.patch = 0\r\n      this.prerelease = []\r\n      break\r\n    case 'patch':\r\n      // If this is not a pre-release version, it will increment the patch.\r\n      // If it is a pre-release it will bump up to the same patch version.\r\n      // 1.2.0-5 patches to 1.2.0\r\n      // 1.2.0 patches to 1.2.1\r\n      if (this.prerelease.length === 0) {\r\n        this.patch++\r\n      }\r\n      this.prerelease = []\r\n      break\r\n    // This probably shouldn't be used publicly.\r\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\r\n    case 'pre':\r\n      if (this.prerelease.length === 0) {\r\n        this.prerelease = [0]\r\n      } else {\r\n        var i = this.prerelease.length\r\n        while (--i >= 0) {\r\n          if (typeof this.prerelease[i] === 'number') {\r\n            this.prerelease[i]++\r\n            i = -2\r\n          }\r\n        }\r\n        if (i === -1) {\r\n          // didn't increment anything\r\n          this.prerelease.push(0)\r\n        }\r\n      }\r\n      if (identifier) {\r\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\r\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\r\n        if (this.prerelease[0] === identifier) {\r\n          if (isNaN(this.prerelease[1])) {\r\n            this.prerelease = [identifier, 0]\r\n          }\r\n        } else {\r\n          this.prerelease = [identifier, 0]\r\n        }\r\n      }\r\n      break\r\n\r\n    default:\r\n      throw new Error('invalid increment argument: ' + release)\r\n  }\r\n  this.format()\r\n  this.raw = this.version\r\n  return this\r\n}\r\n\r\nexports.inc = inc\r\nfunction inc (version, release, loose, identifier) {\r\n  if (typeof (loose) === 'string') {\r\n    identifier = loose\r\n    loose = undefined\r\n  }\r\n\r\n  try {\r\n    return new SemVer(version, loose).inc(release, identifier).version\r\n  } catch (er) {\r\n    return null\r\n  }\r\n}\r\n\r\nexports.diff = diff\r\nfunction diff (version1, version2) {\r\n  if (eq(version1, version2)) {\r\n    return null\r\n  } else {\r\n    var v1 = parse(version1)\r\n    var v2 = parse(version2)\r\n    var prefix = ''\r\n    if (v1.prerelease.length || v2.prerelease.length) {\r\n      prefix = 'pre'\r\n      var defaultResult = 'prerelease'\r\n    }\r\n    for (var key in v1) {\r\n      if (key === 'major' || key === 'minor' || key === 'patch') {\r\n        if (v1[key] !== v2[key]) {\r\n          return prefix + key\r\n        }\r\n      }\r\n    }\r\n    return defaultResult // may be undefined\r\n  }\r\n}\r\n\r\nexports.compareIdentifiers = compareIdentifiers\r\n\r\nvar numeric = /^[0-9]+$/\r\nfunction compareIdentifiers (a, b) {\r\n  var anum = numeric.test(a)\r\n  var bnum = numeric.test(b)\r\n\r\n  if (anum && bnum) {\r\n    a = +a\r\n    b = +b\r\n  }\r\n\r\n  return a === b ? 0\r\n    : (anum && !bnum) ? -1\r\n    : (bnum && !anum) ? 1\r\n    : a < b ? -1\r\n    : 1\r\n}\r\n\r\nexports.rcompareIdentifiers = rcompareIdentifiers\r\nfunction rcompareIdentifiers (a, b) {\r\n  return compareIdentifiers(b, a)\r\n}\r\n\r\nexports.major = major\r\nfunction major (a, loose) {\r\n  return new SemVer(a, loose).major\r\n}\r\n\r\nexports.minor = minor\r\nfunction minor (a, loose) {\r\n  return new SemVer(a, loose).minor\r\n}\r\n\r\nexports.patch = patch\r\nfunction patch (a, loose) {\r\n  return new SemVer(a, loose).patch\r\n}\r\n\r\nexports.compare = compare\r\nfunction compare (a, b, loose) {\r\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\r\n}\r\n\r\nexports.compareLoose = compareLoose\r\nfunction compareLoose (a, b) {\r\n  return compare(a, b, true)\r\n}\r\n\r\nexports.rcompare = rcompare\r\nfunction rcompare (a, b, loose) {\r\n  return compare(b, a, loose)\r\n}\r\n\r\nexports.sort = sort\r\nfunction sort (list, loose) {\r\n  return list.sort(function (a, b) {\r\n    return exports.compare(a, b, loose)\r\n  })\r\n}\r\n\r\nexports.rsort = rsort\r\nfunction rsort (list, loose) {\r\n  return list.sort(function (a, b) {\r\n    return exports.rcompare(a, b, loose)\r\n  })\r\n}\r\n\r\nexports.gt = gt\r\nfunction gt (a, b, loose) {\r\n  return compare(a, b, loose) > 0\r\n}\r\n\r\nexports.lt = lt\r\nfunction lt (a, b, loose) {\r\n  return compare(a, b, loose) < 0\r\n}\r\n\r\nexports.eq = eq\r\nfunction eq (a, b, loose) {\r\n  return compare(a, b, loose) === 0\r\n}\r\n\r\nexports.neq = neq\r\nfunction neq (a, b, loose) {\r\n  return compare(a, b, loose) !== 0\r\n}\r\n\r\nexports.gte = gte\r\nfunction gte (a, b, loose) {\r\n  return compare(a, b, loose) >= 0\r\n}\r\n\r\nexports.lte = lte\r\nfunction lte (a, b, loose) {\r\n  return compare(a, b, loose) <= 0\r\n}\r\n\r\nexports.cmp = cmp\r\nfunction cmp (a, op, b, loose) {\r\n  switch (op) {\r\n    case '===':\r\n      if (typeof a === 'object')\r\n        a = a.version\r\n      if (typeof b === 'object')\r\n        b = b.version\r\n      return a === b\r\n\r\n    case '!==':\r\n      if (typeof a === 'object')\r\n        a = a.version\r\n      if (typeof b === 'object')\r\n        b = b.version\r\n      return a !== b\r\n\r\n    case '':\r\n    case '=':\r\n    case '==':\r\n      return eq(a, b, loose)\r\n\r\n    case '!=':\r\n      return neq(a, b, loose)\r\n\r\n    case '>':\r\n      return gt(a, b, loose)\r\n\r\n    case '>=':\r\n      return gte(a, b, loose)\r\n\r\n    case '<':\r\n      return lt(a, b, loose)\r\n\r\n    case '<=':\r\n      return lte(a, b, loose)\r\n\r\n    default:\r\n      throw new TypeError('Invalid operator: ' + op)\r\n  }\r\n}\r\n\r\nexports.Comparator = Comparator\r\nfunction Comparator (comp, options) {\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n\r\n  if (comp instanceof Comparator) {\r\n    if (comp.loose === !!options.loose) {\r\n      return comp\r\n    } else {\r\n      comp = comp.value\r\n    }\r\n  }\r\n\r\n  if (!(this instanceof Comparator)) {\r\n    return new Comparator(comp, options)\r\n  }\r\n\r\n  debug('comparator', comp, options)\r\n  this.options = options\r\n  this.loose = !!options.loose\r\n  this.parse(comp)\r\n\r\n  if (this.semver === ANY) {\r\n    this.value = ''\r\n  } else {\r\n    this.value = this.operator + this.semver.version\r\n  }\r\n\r\n  debug('comp', this)\r\n}\r\n\r\nvar ANY = {}\r\nComparator.prototype.parse = function (comp) {\r\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\r\n  var m = comp.match(r)\r\n\r\n  if (!m) {\r\n    throw new TypeError('Invalid comparator: ' + comp)\r\n  }\r\n\r\n  this.operator = m[1]\r\n  if (this.operator === '=') {\r\n    this.operator = ''\r\n  }\r\n\r\n  // if it literally is just '>' or '' then allow anything.\r\n  if (!m[2]) {\r\n    this.semver = ANY\r\n  } else {\r\n    this.semver = new SemVer(m[2], this.options.loose)\r\n  }\r\n}\r\n\r\nComparator.prototype.toString = function () {\r\n  return this.value\r\n}\r\n\r\nComparator.prototype.test = function (version) {\r\n  debug('Comparator.test', version, this.options.loose)\r\n\r\n  if (this.semver === ANY) {\r\n    return true\r\n  }\r\n\r\n  if (typeof version === 'string') {\r\n    version = new SemVer(version, this.options)\r\n  }\r\n\r\n  return cmp(version, this.operator, this.semver, this.options)\r\n}\r\n\r\nComparator.prototype.intersects = function (comp, options) {\r\n  if (!(comp instanceof Comparator)) {\r\n    throw new TypeError('a Comparator is required')\r\n  }\r\n\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n\r\n  var rangeTmp\r\n\r\n  if (this.operator === '') {\r\n    rangeTmp = new Range(comp.value, options)\r\n    return satisfies(this.value, rangeTmp, options)\r\n  } else if (comp.operator === '') {\r\n    rangeTmp = new Range(this.value, options)\r\n    return satisfies(comp.semver, rangeTmp, options)\r\n  }\r\n\r\n  var sameDirectionIncreasing =\r\n    (this.operator === '>=' || this.operator === '>') &&\r\n    (comp.operator === '>=' || comp.operator === '>')\r\n  var sameDirectionDecreasing =\r\n    (this.operator === '<=' || this.operator === '<') &&\r\n    (comp.operator === '<=' || comp.operator === '<')\r\n  var sameSemVer = this.semver.version === comp.semver.version\r\n  var differentDirectionsInclusive =\r\n    (this.operator === '>=' || this.operator === '<=') &&\r\n    (comp.operator === '>=' || comp.operator === '<=')\r\n  var oppositeDirectionsLessThan =\r\n    cmp(this.semver, '<', comp.semver, options) &&\r\n    ((this.operator === '>=' || this.operator === '>') &&\r\n    (comp.operator === '<=' || comp.operator === '<'))\r\n  var oppositeDirectionsGreaterThan =\r\n    cmp(this.semver, '>', comp.semver, options) &&\r\n    ((this.operator === '<=' || this.operator === '<') &&\r\n    (comp.operator === '>=' || comp.operator === '>'))\r\n\r\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\r\n    (sameSemVer && differentDirectionsInclusive) ||\r\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\r\n}\r\n\r\nexports.Range = Range\r\nfunction Range (range, options) {\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n\r\n  if (range instanceof Range) {\r\n    if (range.loose === !!options.loose &&\r\n        range.includePrerelease === !!options.includePrerelease) {\r\n      return range\r\n    } else {\r\n      return new Range(range.raw, options)\r\n    }\r\n  }\r\n\r\n  if (range instanceof Comparator) {\r\n    return new Range(range.value, options)\r\n  }\r\n\r\n  if (!(this instanceof Range)) {\r\n    return new Range(range, options)\r\n  }\r\n\r\n  this.options = options\r\n  this.loose = !!options.loose\r\n  this.includePrerelease = !!options.includePrerelease\r\n\r\n  // First, split based on boolean or ||\r\n  this.raw = range\r\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\r\n    return this.parseRange(range.trim())\r\n  }, this).filter(function (c) {\r\n    // throw out any that are not relevant for whatever reason\r\n    return c.length\r\n  })\r\n\r\n  if (!this.set.length) {\r\n    throw new TypeError('Invalid SemVer Range: ' + range)\r\n  }\r\n\r\n  this.format()\r\n}\r\n\r\nRange.prototype.format = function () {\r\n  this.range = this.set.map(function (comps) {\r\n    return comps.join(' ').trim()\r\n  }).join('||').trim()\r\n  return this.range\r\n}\r\n\r\nRange.prototype.toString = function () {\r\n  return this.range\r\n}\r\n\r\nRange.prototype.parseRange = function (range) {\r\n  var loose = this.options.loose\r\n  range = range.trim()\r\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\r\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE]\r\n  range = range.replace(hr, hyphenReplace)\r\n  debug('hyphen replace', range)\r\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\r\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace)\r\n  debug('comparator trim', range, re[COMPARATORTRIM])\r\n\r\n  // `~ 1.2.3` => `~1.2.3`\r\n  range = range.replace(re[TILDETRIM], tildeTrimReplace)\r\n\r\n  // `^ 1.2.3` => `^1.2.3`\r\n  range = range.replace(re[CARETTRIM], caretTrimReplace)\r\n\r\n  // normalize spaces\r\n  range = range.split(/\\s+/).join(' ')\r\n\r\n  // At this point, the range is completely trimmed and\r\n  // ready to be split into comparators.\r\n\r\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\r\n  var set = range.split(' ').map(function (comp) {\r\n    return parseComparator(comp, this.options)\r\n  }, this).join(' ').split(/\\s+/)\r\n  if (this.options.loose) {\r\n    // in loose mode, throw out any that are not valid comparators\r\n    set = set.filter(function (comp) {\r\n      return !!comp.match(compRe)\r\n    })\r\n  }\r\n  set = set.map(function (comp) {\r\n    return new Comparator(comp, this.options)\r\n  }, this)\r\n\r\n  return set\r\n}\r\n\r\nRange.prototype.intersects = function (range, options) {\r\n  if (!(range instanceof Range)) {\r\n    throw new TypeError('a Range is required')\r\n  }\r\n\r\n  return this.set.some(function (thisComparators) {\r\n    return thisComparators.every(function (thisComparator) {\r\n      return range.set.some(function (rangeComparators) {\r\n        return rangeComparators.every(function (rangeComparator) {\r\n          return thisComparator.intersects(rangeComparator, options)\r\n        })\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n// Mostly just for testing and legacy API reasons\r\nexports.toComparators = toComparators\r\nfunction toComparators (range, options) {\r\n  return new Range(range, options).set.map(function (comp) {\r\n    return comp.map(function (c) {\r\n      return c.value\r\n    }).join(' ').trim().split(' ')\r\n  })\r\n}\r\n\r\n// comprised of xranges, tildes, stars, and gtlt's at this point.\r\n// already replaced the hyphen ranges\r\n// turn into a set of JUST comparators.\r\nfunction parseComparator (comp, options) {\r\n  debug('comp', comp, options)\r\n  comp = replaceCarets(comp, options)\r\n  debug('caret', comp)\r\n  comp = replaceTildes(comp, options)\r\n  debug('tildes', comp)\r\n  comp = replaceXRanges(comp, options)\r\n  debug('xrange', comp)\r\n  comp = replaceStars(comp, options)\r\n  debug('stars', comp)\r\n  return comp\r\n}\r\n\r\nfunction isX (id) {\r\n  return !id || id.toLowerCase() === 'x' || id === '*'\r\n}\r\n\r\n// ~, ~> --> * (any, kinda silly)\r\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\r\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\r\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\r\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\r\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\r\nfunction replaceTildes (comp, options) {\r\n  return comp.trim().split(/\\s+/).map(function (comp) {\r\n    return replaceTilde(comp, options)\r\n  }).join(' ')\r\n}\r\n\r\nfunction replaceTilde (comp, options) {\r\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE]\r\n  return comp.replace(r, function (_, M, m, p, pr) {\r\n    debug('tilde', comp, _, M, m, p, pr)\r\n    var ret\r\n\r\n    if (isX(M)) {\r\n      ret = ''\r\n    } else if (isX(m)) {\r\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\r\n    } else if (isX(p)) {\r\n      // ~1.2 == >=1.2.0 <1.3.0\r\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\r\n    } else if (pr) {\r\n      debug('replaceTilde pr', pr)\r\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\r\n            ' <' + M + '.' + (+m + 1) + '.0'\r\n    } else {\r\n      // ~1.2.3 == >=1.2.3 <1.3.0\r\n      ret = '>=' + M + '.' + m + '.' + p +\r\n            ' <' + M + '.' + (+m + 1) + '.0'\r\n    }\r\n\r\n    debug('tilde return', ret)\r\n    return ret\r\n  })\r\n}\r\n\r\n// ^ --> * (any, kinda silly)\r\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\r\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\r\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\r\n// ^1.2.3 --> >=1.2.3 <2.0.0\r\n// ^1.2.0 --> >=1.2.0 <2.0.0\r\nfunction replaceCarets (comp, options) {\r\n  return comp.trim().split(/\\s+/).map(function (comp) {\r\n    return replaceCaret(comp, options)\r\n  }).join(' ')\r\n}\r\n\r\nfunction replaceCaret (comp, options) {\r\n  debug('caret', comp, options)\r\n  var r = options.loose ? re[CARETLOOSE] : re[CARET]\r\n  return comp.replace(r, function (_, M, m, p, pr) {\r\n    debug('caret', comp, _, M, m, p, pr)\r\n    var ret\r\n\r\n    if (isX(M)) {\r\n      ret = ''\r\n    } else if (isX(m)) {\r\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\r\n    } else if (isX(p)) {\r\n      if (M === '0') {\r\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\r\n      } else {\r\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\r\n      }\r\n    } else if (pr) {\r\n      debug('replaceCaret pr', pr)\r\n      if (M === '0') {\r\n        if (m === '0') {\r\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\r\n                ' <' + M + '.' + m + '.' + (+p + 1)\r\n        } else {\r\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\r\n                ' <' + M + '.' + (+m + 1) + '.0'\r\n        }\r\n      } else {\r\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\r\n              ' <' + (+M + 1) + '.0.0'\r\n      }\r\n    } else {\r\n      debug('no pr')\r\n      if (M === '0') {\r\n        if (m === '0') {\r\n          ret = '>=' + M + '.' + m + '.' + p +\r\n                ' <' + M + '.' + m + '.' + (+p + 1)\r\n        } else {\r\n          ret = '>=' + M + '.' + m + '.' + p +\r\n                ' <' + M + '.' + (+m + 1) + '.0'\r\n        }\r\n      } else {\r\n        ret = '>=' + M + '.' + m + '.' + p +\r\n              ' <' + (+M + 1) + '.0.0'\r\n      }\r\n    }\r\n\r\n    debug('caret return', ret)\r\n    return ret\r\n  })\r\n}\r\n\r\nfunction replaceXRanges (comp, options) {\r\n  debug('replaceXRanges', comp, options)\r\n  return comp.split(/\\s+/).map(function (comp) {\r\n    return replaceXRange(comp, options)\r\n  }).join(' ')\r\n}\r\n\r\nfunction replaceXRange (comp, options) {\r\n  comp = comp.trim()\r\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE]\r\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\r\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\r\n    var xM = isX(M)\r\n    var xm = xM || isX(m)\r\n    var xp = xm || isX(p)\r\n    var anyX = xp\r\n\r\n    if (gtlt === '=' && anyX) {\r\n      gtlt = ''\r\n    }\r\n\r\n    if (xM) {\r\n      if (gtlt === '>' || gtlt === '<') {\r\n        // nothing is allowed\r\n        ret = '<0.0.0'\r\n      } else {\r\n        // nothing is forbidden\r\n        ret = '*'\r\n      }\r\n    } else if (gtlt && anyX) {\r\n      // we know patch is an x, because we have any x at all.\r\n      // replace X with 0\r\n      if (xm) {\r\n        m = 0\r\n      }\r\n      p = 0\r\n\r\n      if (gtlt === '>') {\r\n        // >1 => >=2.0.0\r\n        // >1.2 => >=1.3.0\r\n        // >1.2.3 => >= 1.2.4\r\n        gtlt = '>='\r\n        if (xm) {\r\n          M = +M + 1\r\n          m = 0\r\n          p = 0\r\n        } else {\r\n          m = +m + 1\r\n          p = 0\r\n        }\r\n      } else if (gtlt === '<=') {\r\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\r\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\r\n        gtlt = '<'\r\n        if (xm) {\r\n          M = +M + 1\r\n        } else {\r\n          m = +m + 1\r\n        }\r\n      }\r\n\r\n      ret = gtlt + M + '.' + m + '.' + p\r\n    } else if (xm) {\r\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\r\n    } else if (xp) {\r\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\r\n    }\r\n\r\n    debug('xRange return', ret)\r\n\r\n    return ret\r\n  })\r\n}\r\n\r\n// Because * is AND-ed with everything else in the comparator,\r\n// and '' means \"any version\", just remove the *s entirely.\r\nfunction replaceStars (comp, options) {\r\n  debug('replaceStars', comp, options)\r\n  // Looseness is ignored here.  star is always as loose as it gets!\r\n  return comp.trim().replace(re[STAR], '')\r\n}\r\n\r\n// This function is passed to string.replace(re[HYPHENRANGE])\r\n// M, m, patch, prerelease, build\r\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\r\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\r\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\r\nfunction hyphenReplace ($0,\r\n  from, fM, fm, fp, fpr, fb,\r\n  to, tM, tm, tp, tpr, tb) {\r\n  if (isX(fM)) {\r\n    from = ''\r\n  } else if (isX(fm)) {\r\n    from = '>=' + fM + '.0.0'\r\n  } else if (isX(fp)) {\r\n    from = '>=' + fM + '.' + fm + '.0'\r\n  } else {\r\n    from = '>=' + from\r\n  }\r\n\r\n  if (isX(tM)) {\r\n    to = ''\r\n  } else if (isX(tm)) {\r\n    to = '<' + (+tM + 1) + '.0.0'\r\n  } else if (isX(tp)) {\r\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\r\n  } else if (tpr) {\r\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\r\n  } else {\r\n    to = '<=' + to\r\n  }\r\n\r\n  return (from + ' ' + to).trim()\r\n}\r\n\r\n// if ANY of the sets match ALL of its comparators, then pass\r\nRange.prototype.test = function (version) {\r\n  if (!version) {\r\n    return false\r\n  }\r\n\r\n  if (typeof version === 'string') {\r\n    version = new SemVer(version, this.options)\r\n  }\r\n\r\n  for (var i = 0; i < this.set.length; i++) {\r\n    if (testSet(this.set[i], version, this.options)) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction testSet (set, version, options) {\r\n  for (var i = 0; i < set.length; i++) {\r\n    if (!set[i].test(version)) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  if (version.prerelease.length && !options.includePrerelease) {\r\n    // Find the set of versions that are allowed to have prereleases\r\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\r\n    // That should allow `1.2.3-pr.2` to pass.\r\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\r\n    // even though it's within the range set by the comparators.\r\n    for (i = 0; i < set.length; i++) {\r\n      debug(set[i].semver)\r\n      if (set[i].semver === ANY) {\r\n        continue\r\n      }\r\n\r\n      if (set[i].semver.prerelease.length > 0) {\r\n        var allowed = set[i].semver\r\n        if (allowed.major === version.major &&\r\n            allowed.minor === version.minor &&\r\n            allowed.patch === version.patch) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n\r\n    // Version has a -pre, but it's not one of the ones we like.\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexports.satisfies = satisfies\r\nfunction satisfies (version, range, options) {\r\n  try {\r\n    range = new Range(range, options)\r\n  } catch (er) {\r\n    return false\r\n  }\r\n  return range.test(version)\r\n}\r\n\r\nexports.maxSatisfying = maxSatisfying\r\nfunction maxSatisfying (versions, range, options) {\r\n  var max = null\r\n  var maxSV = null\r\n  try {\r\n    var rangeObj = new Range(range, options)\r\n  } catch (er) {\r\n    return null\r\n  }\r\n  versions.forEach(function (v) {\r\n    if (rangeObj.test(v)) {\r\n      // satisfies(v, range, options)\r\n      if (!max || maxSV.compare(v) === -1) {\r\n        // compare(max, v, true)\r\n        max = v\r\n        maxSV = new SemVer(max, options)\r\n      }\r\n    }\r\n  })\r\n  return max\r\n}\r\n\r\nexports.minSatisfying = minSatisfying\r\nfunction minSatisfying (versions, range, options) {\r\n  var min = null\r\n  var minSV = null\r\n  try {\r\n    var rangeObj = new Range(range, options)\r\n  } catch (er) {\r\n    return null\r\n  }\r\n  versions.forEach(function (v) {\r\n    if (rangeObj.test(v)) {\r\n      // satisfies(v, range, options)\r\n      if (!min || minSV.compare(v) === 1) {\r\n        // compare(min, v, true)\r\n        min = v\r\n        minSV = new SemVer(min, options)\r\n      }\r\n    }\r\n  })\r\n  return min\r\n}\r\n\r\nexports.minVersion = minVersion\r\nfunction minVersion (range, loose) {\r\n  range = new Range(range, loose)\r\n\r\n  var minver = new SemVer('0.0.0')\r\n  if (range.test(minver)) {\r\n    return minver\r\n  }\r\n\r\n  minver = new SemVer('0.0.0-0')\r\n  if (range.test(minver)) {\r\n    return minver\r\n  }\r\n\r\n  minver = null\r\n  for (var i = 0; i < range.set.length; ++i) {\r\n    var comparators = range.set[i]\r\n\r\n    comparators.forEach(function (comparator) {\r\n      // Clone to avoid manipulating the comparator's semver object.\r\n      var compver = new SemVer(comparator.semver.version)\r\n      switch (comparator.operator) {\r\n        case '>':\r\n          if (compver.prerelease.length === 0) {\r\n            compver.patch++\r\n          } else {\r\n            compver.prerelease.push(0)\r\n          }\r\n          compver.raw = compver.format()\r\n          /* fallthrough */\r\n        case '':\r\n        case '>=':\r\n          if (!minver || gt(minver, compver)) {\r\n            minver = compver\r\n          }\r\n          break\r\n        case '<':\r\n        case '<=':\r\n          /* Ignore maximum versions */\r\n          break\r\n        /* istanbul ignore next */\r\n        default:\r\n          throw new Error('Unexpected operation: ' + comparator.operator)\r\n      }\r\n    })\r\n  }\r\n\r\n  if (minver && range.test(minver)) {\r\n    return minver\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexports.validRange = validRange\r\nfunction validRange (range, options) {\r\n  try {\r\n    // Return '*' instead of '' so that truthiness works.\r\n    // This will throw if it's invalid anyway\r\n    return new Range(range, options).range || '*'\r\n  } catch (er) {\r\n    return null\r\n  }\r\n}\r\n\r\n// Determine if version is less than all the versions possible in the range\r\nexports.ltr = ltr\r\nfunction ltr (version, range, options) {\r\n  return outside(version, range, '<', options)\r\n}\r\n\r\n// Determine if version is greater than all the versions possible in the range.\r\nexports.gtr = gtr\r\nfunction gtr (version, range, options) {\r\n  return outside(version, range, '>', options)\r\n}\r\n\r\nexports.outside = outside\r\nfunction outside (version, range, hilo, options) {\r\n  version = new SemVer(version, options)\r\n  range = new Range(range, options)\r\n\r\n  var gtfn, ltefn, ltfn, comp, ecomp\r\n  switch (hilo) {\r\n    case '>':\r\n      gtfn = gt\r\n      ltefn = lte\r\n      ltfn = lt\r\n      comp = '>'\r\n      ecomp = '>='\r\n      break\r\n    case '<':\r\n      gtfn = lt\r\n      ltefn = gte\r\n      ltfn = gt\r\n      comp = '<'\r\n      ecomp = '<='\r\n      break\r\n    default:\r\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\r\n  }\r\n\r\n  // If it satisifes the range it is not outside\r\n  if (satisfies(version, range, options)) {\r\n    return false\r\n  }\r\n\r\n  // From now on, variable terms are as if we're in \"gtr\" mode.\r\n  // but note that everything is flipped for the \"ltr\" function.\r\n\r\n  for (var i = 0; i < range.set.length; ++i) {\r\n    var comparators = range.set[i]\r\n\r\n    var high = null\r\n    var low = null\r\n\r\n    comparators.forEach(function (comparator) {\r\n      if (comparator.semver === ANY) {\r\n        comparator = new Comparator('>=0.0.0')\r\n      }\r\n      high = high || comparator\r\n      low = low || comparator\r\n      if (gtfn(comparator.semver, high.semver, options)) {\r\n        high = comparator\r\n      } else if (ltfn(comparator.semver, low.semver, options)) {\r\n        low = comparator\r\n      }\r\n    })\r\n\r\n    // If the edge version comparator has a operator then our version\r\n    // isn't outside it\r\n    if (high.operator === comp || high.operator === ecomp) {\r\n      return false\r\n    }\r\n\r\n    // If the lowest version comparator has an operator and our version\r\n    // is less than it then it isn't higher than the range\r\n    if ((!low.operator || low.operator === comp) &&\r\n        ltefn(version, low.semver)) {\r\n      return false\r\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexports.prerelease = prerelease\r\nfunction prerelease (version, options) {\r\n  var parsed = parse(version, options)\r\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\r\n}\r\n\r\nexports.intersects = intersects\r\nfunction intersects (r1, r2, options) {\r\n  r1 = new Range(r1, options)\r\n  r2 = new Range(r2, options)\r\n  return r1.intersects(r2)\r\n}\r\n\r\nexports.coerce = coerce\r\nfunction coerce (version) {\r\n  if (version instanceof SemVer) {\r\n    return version\r\n  }\r\n\r\n  if (typeof version !== 'string') {\r\n    return null\r\n  }\r\n\r\n  var match = version.match(re[COERCE])\r\n\r\n  if (match == null) {\r\n    return null\r\n  }\r\n\r\n  return parse(match[1] +\r\n    '.' + (match[2] || '0') +\r\n    '.' + (match[3] || '0'))\r\n}\r\n","// Returns a wrapper function that returns a wrapped callback\r\n// The wrapper function should do some stuff, and return a\r\n// presumably different callback function.\r\n// This makes sure that own properties are retained, so that\r\n// decorations and such are not lost along the way.\r\nmodule.exports = wrappy\r\nfunction wrappy (fn, cb) {\r\n  if (fn && cb) return wrappy(fn)(cb)\r\n\r\n  if (typeof fn !== 'function')\r\n    throw new TypeError('need wrapper function')\r\n\r\n  Object.keys(fn).forEach(function (k) {\r\n    wrapper[k] = fn[k]\r\n  })\r\n\r\n  return wrapper\r\n\r\n  function wrapper() {\r\n    var args = new Array(arguments.length)\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i]\r\n    }\r\n    var ret = fn.apply(this, args)\r\n    var cb = args[args.length-1]\r\n    if (typeof ret === 'function' && ret !== cb) {\r\n      Object.keys(cb).forEach(function (k) {\r\n        ret[k] = cb[k]\r\n      })\r\n    }\r\n    return ret\r\n  }\r\n}\r\n","import { app, BrowserWindow } from 'electron';\r\nimport * as path from 'path';\r\nimport * as url from 'url';\r\n\r\nlet win: BrowserWindow | null;\r\n\r\nconst installExtensions = async () => {\r\n    const installer = require('electron-devtools-installer');\r\n    const forceDownload = !!process.env.UPGRADE_EXTENSIONS;\r\n    const extensions = ['REACT_DEVELOPER_TOOLS', 'REDUX_DEVTOOLS'];\r\n\r\n    return Promise.all(\r\n        extensions.map(name => installer.default(installer[name], forceDownload))\r\n    ).catch(console.log);\r\n};\r\n\r\nconst createWindow = async () => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        await installExtensions();\r\n    }\r\n\r\n    win = new BrowserWindow({ width: 350, height: 650, resizable: true, title:\"Cthulhu Virtual Pet\" });\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        process.env.ELECTRON_DISABLE_SECURITY_WARNINGS = '1';\r\n        win.loadURL(`http://localhost:2003`);\r\n    } else {\r\n        win.loadURL(\r\n            url.format({\r\n                pathname: path.join(__dirname, 'index.html'),\r\n                protocol: 'file:',\r\n                slashes: true\r\n            })\r\n        );\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        // Open DevTools, see https://github.com/electron/electron/issues/12438 for why we wait for dom-ready\r\n        win.webContents.once('dom-ready', () => {\r\n            // win!.webContents.openDevTools();\r\n        });\r\n    }\r\n\r\n    win.on('closed', () => {\r\n        win = null;\r\n    });\r\n};\r\n\r\napp.on('ready', createWindow);\r\n\r\napp.on('window-all-closed', () => {\r\n    if (process.platform !== 'darwin') {\r\n        app.quit();\r\n    }\r\n});\r\n\r\napp.on('activate', () => {\r\n    if (win === null) {\r\n        createWindow();\r\n    }\r\n});\r\n","module.exports = require(\"assert\");","module.exports = require(\"child_process\");","module.exports = require(\"electron\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"https\");","module.exports = require(\"path\");","module.exports = require(\"url\");","module.exports = require(\"util\");"],"sourceRoot":""}